// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: auth.proto
#include "..\Header Files\stdafx.h"

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION

#include "auth.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>



// @@protoc_insertion_point(includes)

namespace in {
namespace gov {
namespace uidai {
namespace authserver {
namespace protobuf {
class PidDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pid> {
} _Pid_default_instance_;
class DemoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Demo> {
} _Demo_default_instance_;
class PiDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pi> {
} _Pi_default_instance_;
class PaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pa> {
} _Pa_default_instance_;
class PfaDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pfa> {
} _Pfa_default_instance_;
class DobDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Dob> {
} _Dob_default_instance_;
class BiosDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Bios> {
} _Bios_default_instance_;
class BioDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Bio> {
} _Bio_default_instance_;
class PvDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Pv> {
} _Pv_default_instance_;

namespace protobuf_auth_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[9];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[6];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pid, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pid, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pid, ver_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pid, ts_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pid, wadh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pid, demo_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pid, bios_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pid, pv_),
  0,
  1,
  2,
  3,
  4,
  5,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Demo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Demo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Demo, lang_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Demo, pi_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Demo, pa_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Demo, pfa_),
  3,
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, mv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, lname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, lmv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, gender_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, dob_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, dobt_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, age_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, email_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pi, phone_),
  9,
  0,
  5,
  1,
  6,
  10,
  4,
  8,
  7,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, co_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, house_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, street_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, lm_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, loc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, vtc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, subdist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, dist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, state_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, pc_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, po_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pa, country_),
  12,
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pfa, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pfa, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pfa, ms_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pfa, av_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pfa, mv_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pfa, lav_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pfa, lmv_),
  4,
  0,
  2,
  1,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dob, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dob, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dob, year_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dob, month_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Dob, day_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bios, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bios, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bios, bio_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bios, dih_),
  ~0u,
  0,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bio, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bio, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bio, posh_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bio, content_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Bio, bs_),
  2,
  3,
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pv, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pv, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pv, otp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Pv, pin_),
  0,
  1,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 11, sizeof(Pid)},
  { 17, 26, sizeof(Demo)},
  { 30, 46, sizeof(Pi)},
  { 57, 75, sizeof(Pa)},
  { 88, 98, sizeof(Pfa)},
  { 103, 111, sizeof(Dob)},
  { 114, 121, sizeof(Bios)},
  { 123, 132, sizeof(Bio)},
  { 136, 143, sizeof(Pv)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pid_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Demo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pi_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pa_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pfa_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Dob_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bios_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Bio_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Pv_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "auth.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 9);
}

}  // namespace

void TableStruct::Shutdown() {
  _Pid_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _Demo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Pi_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Pa_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
  _Pfa_default_instance_.Shutdown();
  delete file_level_metadata[4].reflection;
  _Dob_default_instance_.Shutdown();
  delete file_level_metadata[5].reflection;
  _Bios_default_instance_.Shutdown();
  delete file_level_metadata[6].reflection;
  _Bio_default_instance_.Shutdown();
  delete file_level_metadata[7].reflection;
  _Pv_default_instance_.Shutdown();
  delete file_level_metadata[8].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _Pid_default_instance_.DefaultConstruct();
  _Demo_default_instance_.DefaultConstruct();
  _Pi_default_instance_.DefaultConstruct();
  _Pa_default_instance_.DefaultConstruct();
  _Pfa_default_instance_.DefaultConstruct();
  _Dob_default_instance_.DefaultConstruct();
  _Bios_default_instance_.DefaultConstruct();
  _Bio_default_instance_.DefaultConstruct();
  _Pv_default_instance_.DefaultConstruct();
  _Pid_default_instance_.get_mutable()->demo_ = const_cast< ::in::gov::uidai::authserver::protobuf::Demo*>(
      ::in::gov::uidai::authserver::protobuf::Demo::internal_default_instance());
  _Pid_default_instance_.get_mutable()->bios_ = const_cast< ::in::gov::uidai::authserver::protobuf::Bios*>(
      ::in::gov::uidai::authserver::protobuf::Bios::internal_default_instance());
  _Pid_default_instance_.get_mutable()->pv_ = const_cast< ::in::gov::uidai::authserver::protobuf::Pv*>(
      ::in::gov::uidai::authserver::protobuf::Pv::internal_default_instance());
  _Demo_default_instance_.get_mutable()->pi_ = const_cast< ::in::gov::uidai::authserver::protobuf::Pi*>(
      ::in::gov::uidai::authserver::protobuf::Pi::internal_default_instance());
  _Demo_default_instance_.get_mutable()->pa_ = const_cast< ::in::gov::uidai::authserver::protobuf::Pa*>(
      ::in::gov::uidai::authserver::protobuf::Pa::internal_default_instance());
  _Demo_default_instance_.get_mutable()->pfa_ = const_cast< ::in::gov::uidai::authserver::protobuf::Pfa*>(
      ::in::gov::uidai::authserver::protobuf::Pfa::internal_default_instance());
  _Pi_default_instance_.get_mutable()->dob_ = const_cast< ::in::gov::uidai::authserver::protobuf::Dob*>(
      ::in::gov::uidai::authserver::protobuf::Dob::internal_default_instance());
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\nauth.proto\022 in.gov.uidai.authserver.pr"
      "otobuf\"\312\001\n\003Pid\022\013\n\003ver\030\001 \002(\t\022\n\n\002ts\030\002 \002(\t\022"
      "\014\n\004wadh\030\003 \002(\t\0224\n\004demo\030\004 \001(\0132&.in.gov.uid"
      "ai.authserver.protobuf.Demo\0224\n\004bios\030\005 \001("
      "\0132&.in.gov.uidai.authserver.protobuf.Bio"
      "s\0220\n\002pv\030\006 \001(\0132$.in.gov.uidai.authserver."
      "protobuf.Pv\"\330\001\n\004Demo\0228\n\004lang\030\001 \001(\0162*.in."
      "gov.uidai.authserver.protobuf.LangCode\0220"
      "\n\002pi\030\002 \001(\0132$.in.gov.uidai.authserver.pro"
      "tobuf.Pi\0220\n\002pa\030\003 \001(\0132$.in.gov.uidai.auth"
      "server.protobuf.Pa\0222\n\003pfa\030\004 \001(\0132%.in.gov"
      ".uidai.authserver.protobuf.Pfa\"\375\002\n\002Pi\0220\n"
      "\002ms\030\001 \001(\0162$.in.gov.uidai.authserver.prot"
      "obuf.Ms\022\014\n\004name\030\002 \001(\t\022\n\n\002mv\030\003 \001(\005\022\r\n\005lna"
      "me\030\004 \001(\t\022\013\n\003lmv\030\005 \001(\005\022;\n\006gender\030\006 \001(\0162+."
      "in.gov.uidai.authserver.protobuf.Pi.Gend"
      "er\0222\n\003dob\030\007 \001(\0132%.in.gov.uidai.authserve"
      "r.protobuf.Dob\0227\n\004dobt\030\010 \001(\0162).in.gov.ui"
      "dai.authserver.protobuf.Pi.Dobt\022\013\n\003age\030\t"
      " \001(\005\022\r\n\005email\030\n \001(\t\022\r\n\005phone\030\013 \001(\t\"\035\n\006Ge"
      "nder\022\005\n\001F\020\001\022\005\n\001M\020\002\022\005\n\001T\020\003\"\033\n\004Dobt\022\005\n\001V\020\001"
      "\022\005\n\001D\020\002\022\005\n\001A\020\003\"\336\001\n\002Pa\0220\n\002ms\030\001 \001(\0162$.in.g"
      "ov.uidai.authserver.protobuf.Ms\022\n\n\002co\030\002 "
      "\001(\t\022\r\n\005house\030\003 \001(\t\022\016\n\006street\030\004 \001(\t\022\n\n\002lm"
      "\030\005 \001(\t\022\013\n\003loc\030\006 \001(\t\022\013\n\003vtc\030\007 \001(\t\022\017\n\007subd"
      "ist\030\010 \001(\t\022\014\n\004dist\030\t \001(\t\022\r\n\005state\030\n \001(\t\022\n"
      "\n\002pc\030\013 \001(\t\022\n\n\002po\030\014 \001(\t\022\017\n\007country\030\r \001(\t\""
      "i\n\003Pfa\0220\n\002ms\030\001 \001(\0162$.in.gov.uidai.authse"
      "rver.protobuf.Ms\022\n\n\002av\030\002 \001(\t\022\n\n\002mv\030\003 \001(\005"
      "\022\013\n\003lav\030\004 \001(\t\022\013\n\003lmv\030\005 \001(\005\"/\n\003Dob\022\014\n\004yea"
      "r\030\001 \002(\005\022\r\n\005month\030\002 \001(\005\022\013\n\003day\030\003 \001(\005\"G\n\004B"
      "ios\0222\n\003bio\030\001 \003(\0132%.in.gov.uidai.authserv"
      "er.protobuf.Bio\022\013\n\003dih\030\002 \002(\t\"\225\001\n\003Bio\0227\n\004"
      "type\030\001 \002(\0162).in.gov.uidai.authserver.pro"
      "tobuf.BioType\0228\n\004posh\030\002 \002(\0162*.in.gov.uid"
      "ai.authserver.protobuf.Position\022\017\n\007conte"
      "nt\030\003 \002(\014\022\n\n\002bs\030\004 \002(\t\"\036\n\002Pv\022\013\n\003otp\030\001 \001(\t\022"
      "\013\n\003pin\030\002 \001(\t*\256\001\n\010LangCode\022\014\n\010Assamese\020\001\022"
      "\013\n\007Bengali\020\002\022\014\n\010Gujarati\020\005\022\t\n\005Hindi\020\006\022\013\n"
      "\007Kannada\020\007\022\r\n\tMalayalam\020\013\022\014\n\010Manipuri\020\014\022"
      "\013\n\007Marathi\020\r\022\t\n\005Oriya\020\017\022\013\n\007Punjabi\020\020\022\t\n\005"
      "Tamil\020\024\022\n\n\006Telugu\020\025\022\010\n\004Urdu\020\026* \n\002Ms\022\005\n\001E"
      "\020\001\022\005\n\001P\020\002\022\005\n\001F\020\003\022\005\n\001S\020\004*-\n\007BioType\022\007\n\003FM"
      "R\020\000\022\007\n\003FIR\020\001\022\007\n\003IIR\020\002\022\007\n\003FID\020\003*\335\001\n\010Posit"
      "ion\022\r\n\tLEFT_IRIS\020\001\022\016\n\nRIGHT_IRIS\020\002\022\016\n\nLE"
      "FT_INDEX\020\003\022\017\n\013LEFT_LITTLE\020\004\022\017\n\013LEFT_MIDD"
      "LE\020\005\022\r\n\tLEFT_RING\020\006\022\016\n\nLEFT_THUMB\020\007\022\017\n\013R"
      "IGHT_INDEX\020\010\022\020\n\014RIGHT_LITTLE\020\t\022\020\n\014RIGHT_"
      "MIDDLE\020\n\022\016\n\nRIGHT_RING\020\013\022\017\n\013RIGHT_THUMB\020"
      "\014\022\013\n\007UNKNOWN\020\r"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1974);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "auth.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_auth_2eproto

const ::google::protobuf::EnumDescriptor* Pi_Gender_descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_enum_descriptors[0];
}
bool Pi_Gender_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Pi_Gender Pi::F;
const Pi_Gender Pi::M;
const Pi_Gender Pi::T;
const Pi_Gender Pi::Gender_MIN;
const Pi_Gender Pi::Gender_MAX;
const int Pi::Gender_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Pi_Dobt_descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_enum_descriptors[1];
}
bool Pi_Dobt_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Pi_Dobt Pi::V;
const Pi_Dobt Pi::D;
const Pi_Dobt Pi::A;
const Pi_Dobt Pi::Dobt_MIN;
const Pi_Dobt Pi::Dobt_MAX;
const int Pi::Dobt_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* LangCode_descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_enum_descriptors[2];
}
bool LangCode_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 5:
    case 6:
    case 7:
    case 11:
    case 12:
    case 13:
    case 15:
    case 16:
    case 20:
    case 21:
    case 22:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Ms_descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_enum_descriptors[3];
}
bool Ms_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* BioType_descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_enum_descriptors[4];
}
bool BioType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Position_descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_enum_descriptors[5];
}
bool Position_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
      return true;
    default:
      return false;
  }
}


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pid::kVerFieldNumber;
const int Pid::kTsFieldNumber;
const int Pid::kWadhFieldNumber;
const int Pid::kDemoFieldNumber;
const int Pid::kBiosFieldNumber;
const int Pid::kPvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pid::Pid()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_auth_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:in.gov.uidai.authserver.protobuf.Pid)
}
Pid::Pid(const Pid& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ver()) {
    ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ver_);
  }
  ts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_ts()) {
    ts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ts_);
  }
  wadh_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_wadh()) {
    wadh_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wadh_);
  }
  if (from.has_demo()) {
    demo_ = new ::in::gov::uidai::authserver::protobuf::Demo(*from.demo_);
  } else {
    demo_ = NULL;
  }
  if (from.has_bios()) {
    bios_ = new ::in::gov::uidai::authserver::protobuf::Bios(*from.bios_);
  } else {
    bios_ = NULL;
  }
  if (from.has_pv()) {
    pv_ = new ::in::gov::uidai::authserver::protobuf::Pv(*from.pv_);
  } else {
    pv_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:in.gov.uidai.authserver.protobuf.Pid)
}

void Pid::SharedCtor() {
  _cached_size_ = 0;
  ver_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ts_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wadh_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&demo_, 0, reinterpret_cast<char*>(&pv_) -
    reinterpret_cast<char*>(&demo_) + sizeof(pv_));
}

Pid::~Pid() {
  // @@protoc_insertion_point(destructor:in.gov.uidai.authserver.protobuf.Pid)
  SharedDtor();
}

void Pid::SharedDtor() {
  ver_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ts_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  wadh_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete demo_;
  }
  if (this != internal_default_instance()) {
    delete bios_;
  }
  if (this != internal_default_instance()) {
    delete pv_;
  }
}

void Pid::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pid::descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pid& Pid::default_instance() {
  protobuf_auth_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pid* Pid::New(::google::protobuf::Arena* arena) const {
  Pid* n = new Pid;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pid::Clear() {
// @@protoc_insertion_point(message_clear_start:in.gov.uidai.authserver.protobuf.Pid)
  if (_has_bits_[0 / 32] & 63u) {
    if (has_ver()) {
      GOOGLE_DCHECK(!ver_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ver_.UnsafeRawStringPointer())->clear();
    }
    if (has_ts()) {
      GOOGLE_DCHECK(!ts_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*ts_.UnsafeRawStringPointer())->clear();
    }
    if (has_wadh()) {
      GOOGLE_DCHECK(!wadh_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*wadh_.UnsafeRawStringPointer())->clear();
    }
    if (has_demo()) {
      GOOGLE_DCHECK(demo_ != NULL);
      demo_->::in::gov::uidai::authserver::protobuf::Demo::Clear();
    }
    if (has_bios()) {
      GOOGLE_DCHECK(bios_ != NULL);
      bios_->::in::gov::uidai::authserver::protobuf::Bios::Clear();
    }
    if (has_pv()) {
      GOOGLE_DCHECK(pv_ != NULL);
      pv_->::in::gov::uidai::authserver::protobuf::Pv::Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pid::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:in.gov.uidai.authserver.protobuf.Pid)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string ver = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ver()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ver().data(), this->ver().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pid.ver");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string ts = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_ts()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->ts().data(), this->ts().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pid.ts");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string wadh = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_wadh()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->wadh().data(), this->wadh().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pid.wadh");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .in.gov.uidai.authserver.protobuf.Demo demo = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_demo()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .in.gov.uidai.authserver.protobuf.Bios bios = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bios()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .in.gov.uidai.authserver.protobuf.Pv pv = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pv()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:in.gov.uidai.authserver.protobuf.Pid)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:in.gov.uidai.authserver.protobuf.Pid)
  return false;
#undef DO_
}

void Pid::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:in.gov.uidai.authserver.protobuf.Pid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string ver = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ver().data(), this->ver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pid.ver");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->ver(), output);
  }

  // required string ts = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ts().data(), this->ts().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pid.ts");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->ts(), output);
  }

  // required string wadh = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wadh().data(), this->wadh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pid.wadh");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->wadh(), output);
  }

  // optional .in.gov.uidai.authserver.protobuf.Demo demo = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->demo_, output);
  }

  // optional .in.gov.uidai.authserver.protobuf.Bios bios = 5;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->bios_, output);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pv pv = 6;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *this->pv_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:in.gov.uidai.authserver.protobuf.Pid)
}

::google::protobuf::uint8* Pid::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:in.gov.uidai.authserver.protobuf.Pid)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required string ver = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ver().data(), this->ver().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pid.ver");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->ver(), target);
  }

  // required string ts = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->ts().data(), this->ts().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pid.ts");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->ts(), target);
  }

  // required string wadh = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->wadh().data(), this->wadh().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pid.wadh");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->wadh(), target);
  }

  // optional .in.gov.uidai.authserver.protobuf.Demo demo = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->demo_, deterministic, target);
  }

  // optional .in.gov.uidai.authserver.protobuf.Bios bios = 5;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        5, *this->bios_, deterministic, target);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pv pv = 6;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        6, *this->pv_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:in.gov.uidai.authserver.protobuf.Pid)
  return target;
}

size_t Pid::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:in.gov.uidai.authserver.protobuf.Pid)
  size_t total_size = 0;

  if (has_ver()) {
    // required string ver = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ver());
  }

  if (has_ts()) {
    // required string ts = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ts());
  }

  if (has_wadh()) {
    // required string wadh = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wadh());
  }

  return total_size;
}
size_t Pid::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:in.gov.uidai.authserver.protobuf.Pid)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x00000007) ^ 0x00000007) == 0) {  // All required fields are present.
    // required string ver = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ver());

    // required string ts = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->ts());

    // required string wadh = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->wadh());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_has_bits_[0 / 32] & 56u) {
    // optional .in.gov.uidai.authserver.protobuf.Demo demo = 4;
    if (has_demo()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->demo_);
    }

    // optional .in.gov.uidai.authserver.protobuf.Bios bios = 5;
    if (has_bios()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bios_);
    }

    // optional .in.gov.uidai.authserver.protobuf.Pv pv = 6;
    if (has_pv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pv_);
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pid::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:in.gov.uidai.authserver.protobuf.Pid)
  GOOGLE_DCHECK_NE(&from, this);
  const Pid* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pid>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:in.gov.uidai.authserver.protobuf.Pid)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:in.gov.uidai.authserver.protobuf.Pid)
    MergeFrom(*source);
  }
}

void Pid::MergeFrom(const Pid& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:in.gov.uidai.authserver.protobuf.Pid)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 63u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_ver();
      ver_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ver_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_ts();
      ts_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ts_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_wadh();
      wadh_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.wadh_);
    }
    if (cached_has_bits & 0x00000008u) {
      mutable_demo()->::in::gov::uidai::authserver::protobuf::Demo::MergeFrom(from.demo());
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_bios()->::in::gov::uidai::authserver::protobuf::Bios::MergeFrom(from.bios());
    }
    if (cached_has_bits & 0x00000020u) {
      mutable_pv()->::in::gov::uidai::authserver::protobuf::Pv::MergeFrom(from.pv());
    }
  }
}

void Pid::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:in.gov.uidai.authserver.protobuf.Pid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pid::CopyFrom(const Pid& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:in.gov.uidai.authserver.protobuf.Pid)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pid::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  if (has_demo()) {
    if (!this->demo_->IsInitialized()) return false;
  }
  if (has_bios()) {
    if (!this->bios_->IsInitialized()) return false;
  }
  return true;
}

void Pid::Swap(Pid* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pid::InternalSwap(Pid* other) {
  ver_.Swap(&other->ver_);
  ts_.Swap(&other->ts_);
  wadh_.Swap(&other->wadh_);
  std::swap(demo_, other->demo_);
  std::swap(bios_, other->bios_);
  std::swap(pv_, other->pv_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pid::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pid

// required string ver = 1;
bool Pid::has_ver() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Pid::set_has_ver() {
  _has_bits_[0] |= 0x00000001u;
}
void Pid::clear_has_ver() {
  _has_bits_[0] &= ~0x00000001u;
}
void Pid::clear_ver() {
  ver_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ver();
}
const ::std::string& Pid::ver() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pid.ver)
  return ver_.GetNoArena();
}
void Pid::set_ver(const ::std::string& value) {
  set_has_ver();
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pid.ver)
}
#if LANG_CXX11
void Pid::set_ver(::std::string&& value) {
  set_has_ver();
  ver_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pid.ver)
}
#endif
void Pid::set_ver(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ver();
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pid.ver)
}
void Pid::set_ver(const char* value, size_t size) {
  set_has_ver();
  ver_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pid.ver)
}
::std::string* Pid::mutable_ver() {
  set_has_ver();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pid.ver)
  return ver_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pid::release_ver() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pid.ver)
  clear_has_ver();
  return ver_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pid::set_allocated_ver(::std::string* ver) {
  if (ver != NULL) {
    set_has_ver();
  } else {
    clear_has_ver();
  }
  ver_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ver);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pid.ver)
}

// required string ts = 2;
bool Pid::has_ts() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Pid::set_has_ts() {
  _has_bits_[0] |= 0x00000002u;
}
void Pid::clear_has_ts() {
  _has_bits_[0] &= ~0x00000002u;
}
void Pid::clear_ts() {
  ts_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_ts();
}
const ::std::string& Pid::ts() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pid.ts)
  return ts_.GetNoArena();
}
void Pid::set_ts(const ::std::string& value) {
  set_has_ts();
  ts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pid.ts)
}
#if LANG_CXX11
void Pid::set_ts(::std::string&& value) {
  set_has_ts();
  ts_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pid.ts)
}
#endif
void Pid::set_ts(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_ts();
  ts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pid.ts)
}
void Pid::set_ts(const char* value, size_t size) {
  set_has_ts();
  ts_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pid.ts)
}
::std::string* Pid::mutable_ts() {
  set_has_ts();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pid.ts)
  return ts_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pid::release_ts() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pid.ts)
  clear_has_ts();
  return ts_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pid::set_allocated_ts(::std::string* ts) {
  if (ts != NULL) {
    set_has_ts();
  } else {
    clear_has_ts();
  }
  ts_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ts);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pid.ts)
}

// required string wadh = 3;
bool Pid::has_wadh() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Pid::set_has_wadh() {
  _has_bits_[0] |= 0x00000004u;
}
void Pid::clear_has_wadh() {
  _has_bits_[0] &= ~0x00000004u;
}
void Pid::clear_wadh() {
  wadh_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_wadh();
}
const ::std::string& Pid::wadh() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pid.wadh)
  return wadh_.GetNoArena();
}
void Pid::set_wadh(const ::std::string& value) {
  set_has_wadh();
  wadh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pid.wadh)
}
#if LANG_CXX11
void Pid::set_wadh(::std::string&& value) {
  set_has_wadh();
  wadh_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pid.wadh)
}
#endif
void Pid::set_wadh(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_wadh();
  wadh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pid.wadh)
}
void Pid::set_wadh(const char* value, size_t size) {
  set_has_wadh();
  wadh_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pid.wadh)
}
::std::string* Pid::mutable_wadh() {
  set_has_wadh();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pid.wadh)
  return wadh_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pid::release_wadh() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pid.wadh)
  clear_has_wadh();
  return wadh_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pid::set_allocated_wadh(::std::string* wadh) {
  if (wadh != NULL) {
    set_has_wadh();
  } else {
    clear_has_wadh();
  }
  wadh_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), wadh);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pid.wadh)
}

// optional .in.gov.uidai.authserver.protobuf.Demo demo = 4;
bool Pid::has_demo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Pid::set_has_demo() {
  _has_bits_[0] |= 0x00000008u;
}
void Pid::clear_has_demo() {
  _has_bits_[0] &= ~0x00000008u;
}
void Pid::clear_demo() {
  if (demo_ != NULL) demo_->::in::gov::uidai::authserver::protobuf::Demo::Clear();
  clear_has_demo();
}
const ::in::gov::uidai::authserver::protobuf::Demo& Pid::demo() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pid.demo)
  return demo_ != NULL ? *demo_
                         : *::in::gov::uidai::authserver::protobuf::Demo::internal_default_instance();
}
::in::gov::uidai::authserver::protobuf::Demo* Pid::mutable_demo() {
  set_has_demo();
  if (demo_ == NULL) {
    demo_ = new ::in::gov::uidai::authserver::protobuf::Demo;
  }
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pid.demo)
  return demo_;
}
::in::gov::uidai::authserver::protobuf::Demo* Pid::release_demo() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pid.demo)
  clear_has_demo();
  ::in::gov::uidai::authserver::protobuf::Demo* temp = demo_;
  demo_ = NULL;
  return temp;
}
void Pid::set_allocated_demo(::in::gov::uidai::authserver::protobuf::Demo* demo) {
  delete demo_;
  demo_ = demo;
  if (demo) {
    set_has_demo();
  } else {
    clear_has_demo();
  }
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pid.demo)
}

// optional .in.gov.uidai.authserver.protobuf.Bios bios = 5;
bool Pid::has_bios() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Pid::set_has_bios() {
  _has_bits_[0] |= 0x00000010u;
}
void Pid::clear_has_bios() {
  _has_bits_[0] &= ~0x00000010u;
}
void Pid::clear_bios() {
  if (bios_ != NULL) bios_->::in::gov::uidai::authserver::protobuf::Bios::Clear();
  clear_has_bios();
}
const ::in::gov::uidai::authserver::protobuf::Bios& Pid::bios() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pid.bios)
  return bios_ != NULL ? *bios_
                         : *::in::gov::uidai::authserver::protobuf::Bios::internal_default_instance();
}
::in::gov::uidai::authserver::protobuf::Bios* Pid::mutable_bios() {
  set_has_bios();
  if (bios_ == NULL) {
    bios_ = new ::in::gov::uidai::authserver::protobuf::Bios;
  }
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pid.bios)
  return bios_;
}
::in::gov::uidai::authserver::protobuf::Bios* Pid::release_bios() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pid.bios)
  clear_has_bios();
  ::in::gov::uidai::authserver::protobuf::Bios* temp = bios_;
  bios_ = NULL;
  return temp;
}
void Pid::set_allocated_bios(::in::gov::uidai::authserver::protobuf::Bios* bios) {
  delete bios_;
  bios_ = bios;
  if (bios) {
    set_has_bios();
  } else {
    clear_has_bios();
  }
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pid.bios)
}

// optional .in.gov.uidai.authserver.protobuf.Pv pv = 6;
bool Pid::has_pv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Pid::set_has_pv() {
  _has_bits_[0] |= 0x00000020u;
}
void Pid::clear_has_pv() {
  _has_bits_[0] &= ~0x00000020u;
}
void Pid::clear_pv() {
  if (pv_ != NULL) pv_->::in::gov::uidai::authserver::protobuf::Pv::Clear();
  clear_has_pv();
}
const ::in::gov::uidai::authserver::protobuf::Pv& Pid::pv() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pid.pv)
  return pv_ != NULL ? *pv_
                         : *::in::gov::uidai::authserver::protobuf::Pv::internal_default_instance();
}
::in::gov::uidai::authserver::protobuf::Pv* Pid::mutable_pv() {
  set_has_pv();
  if (pv_ == NULL) {
    pv_ = new ::in::gov::uidai::authserver::protobuf::Pv;
  }
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pid.pv)
  return pv_;
}
::in::gov::uidai::authserver::protobuf::Pv* Pid::release_pv() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pid.pv)
  clear_has_pv();
  ::in::gov::uidai::authserver::protobuf::Pv* temp = pv_;
  pv_ = NULL;
  return temp;
}
void Pid::set_allocated_pv(::in::gov::uidai::authserver::protobuf::Pv* pv) {
  delete pv_;
  pv_ = pv;
  if (pv) {
    set_has_pv();
  } else {
    clear_has_pv();
  }
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pid.pv)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Demo::kLangFieldNumber;
const int Demo::kPiFieldNumber;
const int Demo::kPaFieldNumber;
const int Demo::kPfaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Demo::Demo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_auth_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:in.gov.uidai.authserver.protobuf.Demo)
}
Demo::Demo(const Demo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pi()) {
    pi_ = new ::in::gov::uidai::authserver::protobuf::Pi(*from.pi_);
  } else {
    pi_ = NULL;
  }
  if (from.has_pa()) {
    pa_ = new ::in::gov::uidai::authserver::protobuf::Pa(*from.pa_);
  } else {
    pa_ = NULL;
  }
  if (from.has_pfa()) {
    pfa_ = new ::in::gov::uidai::authserver::protobuf::Pfa(*from.pfa_);
  } else {
    pfa_ = NULL;
  }
  lang_ = from.lang_;
  // @@protoc_insertion_point(copy_constructor:in.gov.uidai.authserver.protobuf.Demo)
}

void Demo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&pi_, 0, reinterpret_cast<char*>(&pfa_) -
    reinterpret_cast<char*>(&pi_) + sizeof(pfa_));
  lang_ = 1;
}

Demo::~Demo() {
  // @@protoc_insertion_point(destructor:in.gov.uidai.authserver.protobuf.Demo)
  SharedDtor();
}

void Demo::SharedDtor() {
  if (this != internal_default_instance()) {
    delete pi_;
  }
  if (this != internal_default_instance()) {
    delete pa_;
  }
  if (this != internal_default_instance()) {
    delete pfa_;
  }
}

void Demo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Demo::descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Demo& Demo::default_instance() {
  protobuf_auth_2eproto::InitDefaults();
  return *internal_default_instance();
}

Demo* Demo::New(::google::protobuf::Arena* arena) const {
  Demo* n = new Demo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Demo::Clear() {
// @@protoc_insertion_point(message_clear_start:in.gov.uidai.authserver.protobuf.Demo)
  if (_has_bits_[0 / 32] & 15u) {
    if (has_pi()) {
      GOOGLE_DCHECK(pi_ != NULL);
      pi_->::in::gov::uidai::authserver::protobuf::Pi::Clear();
    }
    if (has_pa()) {
      GOOGLE_DCHECK(pa_ != NULL);
      pa_->::in::gov::uidai::authserver::protobuf::Pa::Clear();
    }
    if (has_pfa()) {
      GOOGLE_DCHECK(pfa_ != NULL);
      pfa_->::in::gov::uidai::authserver::protobuf::Pfa::Clear();
    }
    lang_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Demo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:in.gov.uidai.authserver.protobuf.Demo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .in.gov.uidai.authserver.protobuf.LangCode lang = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::in::gov::uidai::authserver::protobuf::LangCode_IsValid(value)) {
            set_lang(static_cast< ::in::gov::uidai::authserver::protobuf::LangCode >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .in.gov.uidai.authserver.protobuf.Pi pi = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pi()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .in.gov.uidai.authserver.protobuf.Pa pa = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pa()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .in.gov.uidai.authserver.protobuf.Pfa pfa = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pfa()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:in.gov.uidai.authserver.protobuf.Demo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:in.gov.uidai.authserver.protobuf.Demo)
  return false;
#undef DO_
}

void Demo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:in.gov.uidai.authserver.protobuf.Demo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .in.gov.uidai.authserver.protobuf.LangCode lang = 1;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->lang(), output);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pi pi = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->pi_, output);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pa pa = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *this->pa_, output);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pfa pfa = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->pfa_, output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:in.gov.uidai.authserver.protobuf.Demo)
}

::google::protobuf::uint8* Demo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:in.gov.uidai.authserver.protobuf.Demo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .in.gov.uidai.authserver.protobuf.LangCode lang = 1;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->lang(), target);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pi pi = 2;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, *this->pi_, deterministic, target);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pa pa = 3;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, *this->pa_, deterministic, target);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pfa pfa = 4;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        4, *this->pfa_, deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:in.gov.uidai.authserver.protobuf.Demo)
  return target;
}

size_t Demo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:in.gov.uidai.authserver.protobuf.Demo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional .in.gov.uidai.authserver.protobuf.Pi pi = 2;
    if (has_pi()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pi_);
    }

    // optional .in.gov.uidai.authserver.protobuf.Pa pa = 3;
    if (has_pa()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pa_);
    }

    // optional .in.gov.uidai.authserver.protobuf.Pfa pfa = 4;
    if (has_pfa()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->pfa_);
    }

    // optional .in.gov.uidai.authserver.protobuf.LangCode lang = 1;
    if (has_lang()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->lang());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Demo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:in.gov.uidai.authserver.protobuf.Demo)
  GOOGLE_DCHECK_NE(&from, this);
  const Demo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Demo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:in.gov.uidai.authserver.protobuf.Demo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:in.gov.uidai.authserver.protobuf.Demo)
    MergeFrom(*source);
  }
}

void Demo::MergeFrom(const Demo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:in.gov.uidai.authserver.protobuf.Demo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      mutable_pi()->::in::gov::uidai::authserver::protobuf::Pi::MergeFrom(from.pi());
    }
    if (cached_has_bits & 0x00000002u) {
      mutable_pa()->::in::gov::uidai::authserver::protobuf::Pa::MergeFrom(from.pa());
    }
    if (cached_has_bits & 0x00000004u) {
      mutable_pfa()->::in::gov::uidai::authserver::protobuf::Pfa::MergeFrom(from.pfa());
    }
    if (cached_has_bits & 0x00000008u) {
      lang_ = from.lang_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Demo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:in.gov.uidai.authserver.protobuf.Demo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Demo::CopyFrom(const Demo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:in.gov.uidai.authserver.protobuf.Demo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Demo::IsInitialized() const {
  if (has_pi()) {
    if (!this->pi_->IsInitialized()) return false;
  }
  return true;
}

void Demo::Swap(Demo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Demo::InternalSwap(Demo* other) {
  std::swap(pi_, other->pi_);
  std::swap(pa_, other->pa_);
  std::swap(pfa_, other->pfa_);
  std::swap(lang_, other->lang_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Demo::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Demo

// optional .in.gov.uidai.authserver.protobuf.LangCode lang = 1;
bool Demo::has_lang() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Demo::set_has_lang() {
  _has_bits_[0] |= 0x00000008u;
}
void Demo::clear_has_lang() {
  _has_bits_[0] &= ~0x00000008u;
}
void Demo::clear_lang() {
  lang_ = 1;
  clear_has_lang();
}
::in::gov::uidai::authserver::protobuf::LangCode Demo::lang() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Demo.lang)
  return static_cast< ::in::gov::uidai::authserver::protobuf::LangCode >(lang_);
}
void Demo::set_lang(::in::gov::uidai::authserver::protobuf::LangCode value) {
  assert(::in::gov::uidai::authserver::protobuf::LangCode_IsValid(value));
  set_has_lang();
  lang_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Demo.lang)
}

// optional .in.gov.uidai.authserver.protobuf.Pi pi = 2;
bool Demo::has_pi() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Demo::set_has_pi() {
  _has_bits_[0] |= 0x00000001u;
}
void Demo::clear_has_pi() {
  _has_bits_[0] &= ~0x00000001u;
}
void Demo::clear_pi() {
  if (pi_ != NULL) pi_->::in::gov::uidai::authserver::protobuf::Pi::Clear();
  clear_has_pi();
}
const ::in::gov::uidai::authserver::protobuf::Pi& Demo::pi() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Demo.pi)
  return pi_ != NULL ? *pi_
                         : *::in::gov::uidai::authserver::protobuf::Pi::internal_default_instance();
}
::in::gov::uidai::authserver::protobuf::Pi* Demo::mutable_pi() {
  set_has_pi();
  if (pi_ == NULL) {
    pi_ = new ::in::gov::uidai::authserver::protobuf::Pi;
  }
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Demo.pi)
  return pi_;
}
::in::gov::uidai::authserver::protobuf::Pi* Demo::release_pi() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Demo.pi)
  clear_has_pi();
  ::in::gov::uidai::authserver::protobuf::Pi* temp = pi_;
  pi_ = NULL;
  return temp;
}
void Demo::set_allocated_pi(::in::gov::uidai::authserver::protobuf::Pi* pi) {
  delete pi_;
  pi_ = pi;
  if (pi) {
    set_has_pi();
  } else {
    clear_has_pi();
  }
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Demo.pi)
}

// optional .in.gov.uidai.authserver.protobuf.Pa pa = 3;
bool Demo::has_pa() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Demo::set_has_pa() {
  _has_bits_[0] |= 0x00000002u;
}
void Demo::clear_has_pa() {
  _has_bits_[0] &= ~0x00000002u;
}
void Demo::clear_pa() {
  if (pa_ != NULL) pa_->::in::gov::uidai::authserver::protobuf::Pa::Clear();
  clear_has_pa();
}
const ::in::gov::uidai::authserver::protobuf::Pa& Demo::pa() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Demo.pa)
  return pa_ != NULL ? *pa_
                         : *::in::gov::uidai::authserver::protobuf::Pa::internal_default_instance();
}
::in::gov::uidai::authserver::protobuf::Pa* Demo::mutable_pa() {
  set_has_pa();
  if (pa_ == NULL) {
    pa_ = new ::in::gov::uidai::authserver::protobuf::Pa;
  }
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Demo.pa)
  return pa_;
}
::in::gov::uidai::authserver::protobuf::Pa* Demo::release_pa() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Demo.pa)
  clear_has_pa();
  ::in::gov::uidai::authserver::protobuf::Pa* temp = pa_;
  pa_ = NULL;
  return temp;
}
void Demo::set_allocated_pa(::in::gov::uidai::authserver::protobuf::Pa* pa) {
  delete pa_;
  pa_ = pa;
  if (pa) {
    set_has_pa();
  } else {
    clear_has_pa();
  }
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Demo.pa)
}

// optional .in.gov.uidai.authserver.protobuf.Pfa pfa = 4;
bool Demo::has_pfa() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Demo::set_has_pfa() {
  _has_bits_[0] |= 0x00000004u;
}
void Demo::clear_has_pfa() {
  _has_bits_[0] &= ~0x00000004u;
}
void Demo::clear_pfa() {
  if (pfa_ != NULL) pfa_->::in::gov::uidai::authserver::protobuf::Pfa::Clear();
  clear_has_pfa();
}
const ::in::gov::uidai::authserver::protobuf::Pfa& Demo::pfa() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Demo.pfa)
  return pfa_ != NULL ? *pfa_
                         : *::in::gov::uidai::authserver::protobuf::Pfa::internal_default_instance();
}
::in::gov::uidai::authserver::protobuf::Pfa* Demo::mutable_pfa() {
  set_has_pfa();
  if (pfa_ == NULL) {
    pfa_ = new ::in::gov::uidai::authserver::protobuf::Pfa;
  }
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Demo.pfa)
  return pfa_;
}
::in::gov::uidai::authserver::protobuf::Pfa* Demo::release_pfa() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Demo.pfa)
  clear_has_pfa();
  ::in::gov::uidai::authserver::protobuf::Pfa* temp = pfa_;
  pfa_ = NULL;
  return temp;
}
void Demo::set_allocated_pfa(::in::gov::uidai::authserver::protobuf::Pfa* pfa) {
  delete pfa_;
  pfa_ = pfa;
  if (pfa) {
    set_has_pfa();
  } else {
    clear_has_pfa();
  }
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Demo.pfa)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pi::kMsFieldNumber;
const int Pi::kNameFieldNumber;
const int Pi::kMvFieldNumber;
const int Pi::kLnameFieldNumber;
const int Pi::kLmvFieldNumber;
const int Pi::kGenderFieldNumber;
const int Pi::kDobFieldNumber;
const int Pi::kDobtFieldNumber;
const int Pi::kAgeFieldNumber;
const int Pi::kEmailFieldNumber;
const int Pi::kPhoneFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pi::Pi()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_auth_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:in.gov.uidai.authserver.protobuf.Pi)
}
Pi::Pi(const Pi& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  lname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lname()) {
    lname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lname_);
  }
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_email()) {
    email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
  }
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_phone()) {
    phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
  }
  if (from.has_dob()) {
    dob_ = new ::in::gov::uidai::authserver::protobuf::Dob(*from.dob_);
  } else {
    dob_ = NULL;
  }
  ::memcpy(&mv_, &from.mv_,
    reinterpret_cast<char*>(&gender_) -
    reinterpret_cast<char*>(&mv_) + sizeof(gender_));
  // @@protoc_insertion_point(copy_constructor:in.gov.uidai.authserver.protobuf.Pi)
}

void Pi::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&dob_, 0, reinterpret_cast<char*>(&age_) -
    reinterpret_cast<char*>(&dob_) + sizeof(age_));
  dobt_ = 1;
  ms_ = 1;
  gender_ = 1;
}

Pi::~Pi() {
  // @@protoc_insertion_point(destructor:in.gov.uidai.authserver.protobuf.Pi)
  SharedDtor();
}

void Pi::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  email_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  phone_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) {
    delete dob_;
  }
}

void Pi::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pi::descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pi& Pi::default_instance() {
  protobuf_auth_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pi* Pi::New(::google::protobuf::Arena* arena) const {
  Pi* n = new Pi;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pi::Clear() {
// @@protoc_insertion_point(message_clear_start:in.gov.uidai.authserver.protobuf.Pi)
  if (_has_bits_[0 / 32] & 31u) {
    if (has_name()) {
      GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*name_.UnsafeRawStringPointer())->clear();
    }
    if (has_lname()) {
      GOOGLE_DCHECK(!lname_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lname_.UnsafeRawStringPointer())->clear();
    }
    if (has_email()) {
      GOOGLE_DCHECK(!email_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*email_.UnsafeRawStringPointer())->clear();
    }
    if (has_phone()) {
      GOOGLE_DCHECK(!phone_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*phone_.UnsafeRawStringPointer())->clear();
    }
    if (has_dob()) {
      GOOGLE_DCHECK(dob_ != NULL);
      dob_->::in::gov::uidai::authserver::protobuf::Dob::Clear();
    }
  }
  if (_has_bits_[0 / 32] & 224u) {
    ::memset(&mv_, 0, reinterpret_cast<char*>(&age_) -
      reinterpret_cast<char*>(&mv_) + sizeof(age_));
  }
  if (_has_bits_[8 / 32] & 1792u) {
    dobt_ = 1;
    ms_ = 1;
    gender_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pi::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:in.gov.uidai.authserver.protobuf.Pi)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::in::gov::uidai::authserver::protobuf::Ms_IsValid(value)) {
            set_ms(static_cast< ::in::gov::uidai::authserver::protobuf::Ms >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pi.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_mv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string lname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lname()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lname().data(), this->lname().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pi.lname");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lmv = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_lmv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lmv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .in.gov.uidai.authserver.protobuf.Pi.Gender gender = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::in::gov::uidai::authserver::protobuf::Pi_Gender_IsValid(value)) {
            set_gender(static_cast< ::in::gov::uidai::authserver::protobuf::Pi_Gender >(value));
          } else {
            mutable_unknown_fields()->AddVarint(6, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .in.gov.uidai.authserver.protobuf.Dob dob = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dob()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional .in.gov.uidai.authserver.protobuf.Pi.Dobt dobt = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::in::gov::uidai::authserver::protobuf::Pi_Dobt_IsValid(value)) {
            set_dobt(static_cast< ::in::gov::uidai::authserver::protobuf::Pi_Dobt >(value));
          } else {
            mutable_unknown_fields()->AddVarint(8, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 age = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u)) {
          set_has_age();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &age_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string email = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_email()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->email().data(), this->email().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pi.email");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string phone = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_phone()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->phone().data(), this->phone().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pi.phone");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:in.gov.uidai.authserver.protobuf.Pi)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:in.gov.uidai.authserver.protobuf.Pi)
  return false;
#undef DO_
}

void Pi::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:in.gov.uidai.authserver.protobuf.Pi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ms(), output);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pi.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional int32 mv = 3;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mv(), output);
  }

  // optional string lname = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lname().data(), this->lname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pi.lname");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->lname(), output);
  }

  // optional int32 lmv = 5;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lmv(), output);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pi.Gender gender = 6;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      6, this->gender(), output);
  }

  // optional .in.gov.uidai.authserver.protobuf.Dob dob = 7;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *this->dob_, output);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pi.Dobt dobt = 8;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      8, this->dobt(), output);
  }

  // optional int32 age = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(9, this->age(), output);
  }

  // optional string email = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pi.email");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->email(), output);
  }

  // optional string phone = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pi.phone");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->phone(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:in.gov.uidai.authserver.protobuf.Pi)
}

::google::protobuf::uint8* Pi::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:in.gov.uidai.authserver.protobuf.Pi)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
  if (cached_has_bits & 0x00000200u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ms(), target);
  }

  // optional string name = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pi.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }

  // optional int32 mv = 3;
  if (cached_has_bits & 0x00000020u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mv(), target);
  }

  // optional string lname = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lname().data(), this->lname().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pi.lname");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lname(), target);
  }

  // optional int32 lmv = 5;
  if (cached_has_bits & 0x00000040u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lmv(), target);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pi.Gender gender = 6;
  if (cached_has_bits & 0x00000400u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      6, this->gender(), target);
  }

  // optional .in.gov.uidai.authserver.protobuf.Dob dob = 7;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        7, *this->dob_, deterministic, target);
  }

  // optional .in.gov.uidai.authserver.protobuf.Pi.Dobt dobt = 8;
  if (cached_has_bits & 0x00000100u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      8, this->dobt(), target);
  }

  // optional int32 age = 9;
  if (cached_has_bits & 0x00000080u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(9, this->age(), target);
  }

  // optional string email = 10;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->email().data(), this->email().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pi.email");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->email(), target);
  }

  // optional string phone = 11;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->phone().data(), this->phone().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pi.phone");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->phone(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:in.gov.uidai.authserver.protobuf.Pi)
  return target;
}

size_t Pi::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:in.gov.uidai.authserver.protobuf.Pi)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string lname = 4;
    if (has_lname()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lname());
    }

    // optional string email = 10;
    if (has_email()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->email());
    }

    // optional string phone = 11;
    if (has_phone()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->phone());
    }

    // optional .in.gov.uidai.authserver.protobuf.Dob dob = 7;
    if (has_dob()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->dob_);
    }

    // optional int32 mv = 3;
    if (has_mv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mv());
    }

    // optional int32 lmv = 5;
    if (has_lmv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lmv());
    }

    // optional int32 age = 9;
    if (has_age()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->age());
    }

  }
  if (_has_bits_[8 / 32] & 1792u) {
    // optional .in.gov.uidai.authserver.protobuf.Pi.Dobt dobt = 8;
    if (has_dobt()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->dobt());
    }

    // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
    if (has_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ms());
    }

    // optional .in.gov.uidai.authserver.protobuf.Pi.Gender gender = 6;
    if (has_gender()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->gender());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pi::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:in.gov.uidai.authserver.protobuf.Pi)
  GOOGLE_DCHECK_NE(&from, this);
  const Pi* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pi>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:in.gov.uidai.authserver.protobuf.Pi)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:in.gov.uidai.authserver.protobuf.Pi)
    MergeFrom(*source);
  }
}

void Pi::MergeFrom(const Pi& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:in.gov.uidai.authserver.protobuf.Pi)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_lname();
      lname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lname_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_email();
      email_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.email_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_phone();
      phone_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.phone_);
    }
    if (cached_has_bits & 0x00000010u) {
      mutable_dob()->::in::gov::uidai::authserver::protobuf::Dob::MergeFrom(from.dob());
    }
    if (cached_has_bits & 0x00000020u) {
      mv_ = from.mv_;
    }
    if (cached_has_bits & 0x00000040u) {
      lmv_ = from.lmv_;
    }
    if (cached_has_bits & 0x00000080u) {
      age_ = from.age_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 1792u) {
    if (cached_has_bits & 0x00000100u) {
      dobt_ = from.dobt_;
    }
    if (cached_has_bits & 0x00000200u) {
      ms_ = from.ms_;
    }
    if (cached_has_bits & 0x00000400u) {
      gender_ = from.gender_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Pi::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:in.gov.uidai.authserver.protobuf.Pi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pi::CopyFrom(const Pi& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:in.gov.uidai.authserver.protobuf.Pi)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pi::IsInitialized() const {
  if (has_dob()) {
    if (!this->dob_->IsInitialized()) return false;
  }
  return true;
}

void Pi::Swap(Pi* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pi::InternalSwap(Pi* other) {
  name_.Swap(&other->name_);
  lname_.Swap(&other->lname_);
  email_.Swap(&other->email_);
  phone_.Swap(&other->phone_);
  std::swap(dob_, other->dob_);
  std::swap(mv_, other->mv_);
  std::swap(lmv_, other->lmv_);
  std::swap(age_, other->age_);
  std::swap(dobt_, other->dobt_);
  std::swap(ms_, other->ms_);
  std::swap(gender_, other->gender_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pi::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pi

// optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
bool Pi::has_ms() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Pi::set_has_ms() {
  _has_bits_[0] |= 0x00000200u;
}
void Pi::clear_has_ms() {
  _has_bits_[0] &= ~0x00000200u;
}
void Pi::clear_ms() {
  ms_ = 1;
  clear_has_ms();
}
::in::gov::uidai::authserver::protobuf::Ms Pi::ms() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pi.ms)
  return static_cast< ::in::gov::uidai::authserver::protobuf::Ms >(ms_);
}
void Pi::set_ms(::in::gov::uidai::authserver::protobuf::Ms value) {
  assert(::in::gov::uidai::authserver::protobuf::Ms_IsValid(value));
  set_has_ms();
  ms_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pi.ms)
}

// optional string name = 2;
bool Pi::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Pi::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void Pi::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void Pi::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& Pi::name() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pi.name)
  return name_.GetNoArena();
}
void Pi::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pi.name)
}
#if LANG_CXX11
void Pi::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pi.name)
}
#endif
void Pi::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pi.name)
}
void Pi::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pi.name)
}
::std::string* Pi::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pi.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pi::release_name() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pi.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pi::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pi.name)
}

// optional int32 mv = 3;
bool Pi::has_mv() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Pi::set_has_mv() {
  _has_bits_[0] |= 0x00000020u;
}
void Pi::clear_has_mv() {
  _has_bits_[0] &= ~0x00000020u;
}
void Pi::clear_mv() {
  mv_ = 0;
  clear_has_mv();
}
::google::protobuf::int32 Pi::mv() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pi.mv)
  return mv_;
}
void Pi::set_mv(::google::protobuf::int32 value) {
  set_has_mv();
  mv_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pi.mv)
}

// optional string lname = 4;
bool Pi::has_lname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Pi::set_has_lname() {
  _has_bits_[0] |= 0x00000002u;
}
void Pi::clear_has_lname() {
  _has_bits_[0] &= ~0x00000002u;
}
void Pi::clear_lname() {
  lname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lname();
}
const ::std::string& Pi::lname() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pi.lname)
  return lname_.GetNoArena();
}
void Pi::set_lname(const ::std::string& value) {
  set_has_lname();
  lname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pi.lname)
}
#if LANG_CXX11
void Pi::set_lname(::std::string&& value) {
  set_has_lname();
  lname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pi.lname)
}
#endif
void Pi::set_lname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lname();
  lname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pi.lname)
}
void Pi::set_lname(const char* value, size_t size) {
  set_has_lname();
  lname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pi.lname)
}
::std::string* Pi::mutable_lname() {
  set_has_lname();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pi.lname)
  return lname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pi::release_lname() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pi.lname)
  clear_has_lname();
  return lname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pi::set_allocated_lname(::std::string* lname) {
  if (lname != NULL) {
    set_has_lname();
  } else {
    clear_has_lname();
  }
  lname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lname);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pi.lname)
}

// optional int32 lmv = 5;
bool Pi::has_lmv() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Pi::set_has_lmv() {
  _has_bits_[0] |= 0x00000040u;
}
void Pi::clear_has_lmv() {
  _has_bits_[0] &= ~0x00000040u;
}
void Pi::clear_lmv() {
  lmv_ = 0;
  clear_has_lmv();
}
::google::protobuf::int32 Pi::lmv() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pi.lmv)
  return lmv_;
}
void Pi::set_lmv(::google::protobuf::int32 value) {
  set_has_lmv();
  lmv_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pi.lmv)
}

// optional .in.gov.uidai.authserver.protobuf.Pi.Gender gender = 6;
bool Pi::has_gender() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Pi::set_has_gender() {
  _has_bits_[0] |= 0x00000400u;
}
void Pi::clear_has_gender() {
  _has_bits_[0] &= ~0x00000400u;
}
void Pi::clear_gender() {
  gender_ = 1;
  clear_has_gender();
}
::in::gov::uidai::authserver::protobuf::Pi_Gender Pi::gender() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pi.gender)
  return static_cast< ::in::gov::uidai::authserver::protobuf::Pi_Gender >(gender_);
}
void Pi::set_gender(::in::gov::uidai::authserver::protobuf::Pi_Gender value) {
  assert(::in::gov::uidai::authserver::protobuf::Pi_Gender_IsValid(value));
  set_has_gender();
  gender_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pi.gender)
}

// optional .in.gov.uidai.authserver.protobuf.Dob dob = 7;
bool Pi::has_dob() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Pi::set_has_dob() {
  _has_bits_[0] |= 0x00000010u;
}
void Pi::clear_has_dob() {
  _has_bits_[0] &= ~0x00000010u;
}
void Pi::clear_dob() {
  if (dob_ != NULL) dob_->::in::gov::uidai::authserver::protobuf::Dob::Clear();
  clear_has_dob();
}
const ::in::gov::uidai::authserver::protobuf::Dob& Pi::dob() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pi.dob)
  return dob_ != NULL ? *dob_
                         : *::in::gov::uidai::authserver::protobuf::Dob::internal_default_instance();
}
::in::gov::uidai::authserver::protobuf::Dob* Pi::mutable_dob() {
  set_has_dob();
  if (dob_ == NULL) {
    dob_ = new ::in::gov::uidai::authserver::protobuf::Dob;
  }
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pi.dob)
  return dob_;
}
::in::gov::uidai::authserver::protobuf::Dob* Pi::release_dob() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pi.dob)
  clear_has_dob();
  ::in::gov::uidai::authserver::protobuf::Dob* temp = dob_;
  dob_ = NULL;
  return temp;
}
void Pi::set_allocated_dob(::in::gov::uidai::authserver::protobuf::Dob* dob) {
  delete dob_;
  dob_ = dob;
  if (dob) {
    set_has_dob();
  } else {
    clear_has_dob();
  }
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pi.dob)
}

// optional .in.gov.uidai.authserver.protobuf.Pi.Dobt dobt = 8;
bool Pi::has_dobt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Pi::set_has_dobt() {
  _has_bits_[0] |= 0x00000100u;
}
void Pi::clear_has_dobt() {
  _has_bits_[0] &= ~0x00000100u;
}
void Pi::clear_dobt() {
  dobt_ = 1;
  clear_has_dobt();
}
::in::gov::uidai::authserver::protobuf::Pi_Dobt Pi::dobt() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pi.dobt)
  return static_cast< ::in::gov::uidai::authserver::protobuf::Pi_Dobt >(dobt_);
}
void Pi::set_dobt(::in::gov::uidai::authserver::protobuf::Pi_Dobt value) {
  assert(::in::gov::uidai::authserver::protobuf::Pi_Dobt_IsValid(value));
  set_has_dobt();
  dobt_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pi.dobt)
}

// optional int32 age = 9;
bool Pi::has_age() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Pi::set_has_age() {
  _has_bits_[0] |= 0x00000080u;
}
void Pi::clear_has_age() {
  _has_bits_[0] &= ~0x00000080u;
}
void Pi::clear_age() {
  age_ = 0;
  clear_has_age();
}
::google::protobuf::int32 Pi::age() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pi.age)
  return age_;
}
void Pi::set_age(::google::protobuf::int32 value) {
  set_has_age();
  age_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pi.age)
}

// optional string email = 10;
bool Pi::has_email() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Pi::set_has_email() {
  _has_bits_[0] |= 0x00000004u;
}
void Pi::clear_has_email() {
  _has_bits_[0] &= ~0x00000004u;
}
void Pi::clear_email() {
  email_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_email();
}
const ::std::string& Pi::email() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pi.email)
  return email_.GetNoArena();
}
void Pi::set_email(const ::std::string& value) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pi.email)
}
#if LANG_CXX11
void Pi::set_email(::std::string&& value) {
  set_has_email();
  email_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pi.email)
}
#endif
void Pi::set_email(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pi.email)
}
void Pi::set_email(const char* value, size_t size) {
  set_has_email();
  email_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pi.email)
}
::std::string* Pi::mutable_email() {
  set_has_email();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pi.email)
  return email_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pi::release_email() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pi.email)
  clear_has_email();
  return email_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pi::set_allocated_email(::std::string* email) {
  if (email != NULL) {
    set_has_email();
  } else {
    clear_has_email();
  }
  email_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), email);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pi.email)
}

// optional string phone = 11;
bool Pi::has_phone() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Pi::set_has_phone() {
  _has_bits_[0] |= 0x00000008u;
}
void Pi::clear_has_phone() {
  _has_bits_[0] &= ~0x00000008u;
}
void Pi::clear_phone() {
  phone_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_phone();
}
const ::std::string& Pi::phone() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pi.phone)
  return phone_.GetNoArena();
}
void Pi::set_phone(const ::std::string& value) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pi.phone)
}
#if LANG_CXX11
void Pi::set_phone(::std::string&& value) {
  set_has_phone();
  phone_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pi.phone)
}
#endif
void Pi::set_phone(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pi.phone)
}
void Pi::set_phone(const char* value, size_t size) {
  set_has_phone();
  phone_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pi.phone)
}
::std::string* Pi::mutable_phone() {
  set_has_phone();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pi.phone)
  return phone_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pi::release_phone() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pi.phone)
  clear_has_phone();
  return phone_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pi::set_allocated_phone(::std::string* phone) {
  if (phone != NULL) {
    set_has_phone();
  } else {
    clear_has_phone();
  }
  phone_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), phone);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pi.phone)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pa::kMsFieldNumber;
const int Pa::kCoFieldNumber;
const int Pa::kHouseFieldNumber;
const int Pa::kStreetFieldNumber;
const int Pa::kLmFieldNumber;
const int Pa::kLocFieldNumber;
const int Pa::kVtcFieldNumber;
const int Pa::kSubdistFieldNumber;
const int Pa::kDistFieldNumber;
const int Pa::kStateFieldNumber;
const int Pa::kPcFieldNumber;
const int Pa::kPoFieldNumber;
const int Pa::kCountryFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pa::Pa()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_auth_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:in.gov.uidai.authserver.protobuf.Pa)
}
Pa::Pa(const Pa& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  co_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_co()) {
    co_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.co_);
  }
  house_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_house()) {
    house_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.house_);
  }
  street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_street()) {
    street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.street_);
  }
  lm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lm()) {
    lm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lm_);
  }
  loc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_loc()) {
    loc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loc_);
  }
  vtc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_vtc()) {
    vtc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vtc_);
  }
  subdist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_subdist()) {
    subdist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subdist_);
  }
  dist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dist()) {
    dist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dist_);
  }
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_state()) {
    state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
  }
  pc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pc()) {
    pc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pc_);
  }
  po_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_po()) {
    po_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.po_);
  }
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_country()) {
    country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
  }
  ms_ = from.ms_;
  // @@protoc_insertion_point(copy_constructor:in.gov.uidai.authserver.protobuf.Pa)
}

void Pa::SharedCtor() {
  _cached_size_ = 0;
  co_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  house_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  street_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lm_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vtc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subdist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dist_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pc_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  po_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ms_ = 1;
}

Pa::~Pa() {
  // @@protoc_insertion_point(destructor:in.gov.uidai.authserver.protobuf.Pa)
  SharedDtor();
}

void Pa::SharedDtor() {
  co_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  house_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  street_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lm_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  loc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vtc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  subdist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  dist_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pc_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  po_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  country_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Pa::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pa::descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pa& Pa::default_instance() {
  protobuf_auth_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pa* Pa::New(::google::protobuf::Arena* arena) const {
  Pa* n = new Pa;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pa::Clear() {
// @@protoc_insertion_point(message_clear_start:in.gov.uidai.authserver.protobuf.Pa)
  if (_has_bits_[0 / 32] & 255u) {
    if (has_co()) {
      GOOGLE_DCHECK(!co_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*co_.UnsafeRawStringPointer())->clear();
    }
    if (has_house()) {
      GOOGLE_DCHECK(!house_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*house_.UnsafeRawStringPointer())->clear();
    }
    if (has_street()) {
      GOOGLE_DCHECK(!street_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*street_.UnsafeRawStringPointer())->clear();
    }
    if (has_lm()) {
      GOOGLE_DCHECK(!lm_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lm_.UnsafeRawStringPointer())->clear();
    }
    if (has_loc()) {
      GOOGLE_DCHECK(!loc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*loc_.UnsafeRawStringPointer())->clear();
    }
    if (has_vtc()) {
      GOOGLE_DCHECK(!vtc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*vtc_.UnsafeRawStringPointer())->clear();
    }
    if (has_subdist()) {
      GOOGLE_DCHECK(!subdist_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*subdist_.UnsafeRawStringPointer())->clear();
    }
    if (has_dist()) {
      GOOGLE_DCHECK(!dist_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*dist_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[8 / 32] & 7936u) {
    if (has_state()) {
      GOOGLE_DCHECK(!state_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*state_.UnsafeRawStringPointer())->clear();
    }
    if (has_pc()) {
      GOOGLE_DCHECK(!pc_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pc_.UnsafeRawStringPointer())->clear();
    }
    if (has_po()) {
      GOOGLE_DCHECK(!po_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*po_.UnsafeRawStringPointer())->clear();
    }
    if (has_country()) {
      GOOGLE_DCHECK(!country_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*country_.UnsafeRawStringPointer())->clear();
    }
    ms_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pa::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:in.gov.uidai.authserver.protobuf.Pa)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::in::gov::uidai::authserver::protobuf::Ms_IsValid(value)) {
            set_ms(static_cast< ::in::gov::uidai::authserver::protobuf::Ms >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string co = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_co()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->co().data(), this->co().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.co");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string house = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_house()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->house().data(), this->house().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.house");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string street = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_street()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->street().data(), this->street().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.street");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string lm = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lm()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lm().data(), this->lm().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.lm");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string loc = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_loc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->loc().data(), this->loc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.loc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string vtc = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_vtc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->vtc().data(), this->vtc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.vtc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string subdist = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_subdist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->subdist().data(), this->subdist().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.subdist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string dist = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dist()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dist().data(), this->dist().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.dist");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string state = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_state()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->state().data(), this->state().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.state");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pc = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pc()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pc().data(), this->pc().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.pc");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string po = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_po()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->po().data(), this->po().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.po");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string country = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_country()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->country().data(), this->country().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pa.country");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:in.gov.uidai.authserver.protobuf.Pa)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:in.gov.uidai.authserver.protobuf.Pa)
  return false;
#undef DO_
}

void Pa::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:in.gov.uidai.authserver.protobuf.Pa)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
  if (cached_has_bits & 0x00001000u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ms(), output);
  }

  // optional string co = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->co().data(), this->co().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.co");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->co(), output);
  }

  // optional string house = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->house().data(), this->house().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.house");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->house(), output);
  }

  // optional string street = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->street().data(), this->street().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.street");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->street(), output);
  }

  // optional string lm = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lm().data(), this->lm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.lm");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      5, this->lm(), output);
  }

  // optional string loc = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loc().data(), this->loc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.loc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      6, this->loc(), output);
  }

  // optional string vtc = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vtc().data(), this->vtc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.vtc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      7, this->vtc(), output);
  }

  // optional string subdist = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subdist().data(), this->subdist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.subdist");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      8, this->subdist(), output);
  }

  // optional string dist = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dist().data(), this->dist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.dist");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      9, this->dist(), output);
  }

  // optional string state = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.state");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      10, this->state(), output);
  }

  // optional string pc = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pc().data(), this->pc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.pc");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      11, this->pc(), output);
  }

  // optional string po = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->po().data(), this->po().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.po");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      12, this->po(), output);
  }

  // optional string country = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.country");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      13, this->country(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:in.gov.uidai.authserver.protobuf.Pa)
}

::google::protobuf::uint8* Pa::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:in.gov.uidai.authserver.protobuf.Pa)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
  if (cached_has_bits & 0x00001000u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ms(), target);
  }

  // optional string co = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->co().data(), this->co().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.co");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->co(), target);
  }

  // optional string house = 3;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->house().data(), this->house().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.house");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->house(), target);
  }

  // optional string street = 4;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->street().data(), this->street().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.street");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->street(), target);
  }

  // optional string lm = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lm().data(), this->lm().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.lm");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        5, this->lm(), target);
  }

  // optional string loc = 6;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->loc().data(), this->loc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.loc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        6, this->loc(), target);
  }

  // optional string vtc = 7;
  if (cached_has_bits & 0x00000020u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->vtc().data(), this->vtc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.vtc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        7, this->vtc(), target);
  }

  // optional string subdist = 8;
  if (cached_has_bits & 0x00000040u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->subdist().data(), this->subdist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.subdist");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->subdist(), target);
  }

  // optional string dist = 9;
  if (cached_has_bits & 0x00000080u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dist().data(), this->dist().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.dist");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        9, this->dist(), target);
  }

  // optional string state = 10;
  if (cached_has_bits & 0x00000100u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->state().data(), this->state().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.state");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        10, this->state(), target);
  }

  // optional string pc = 11;
  if (cached_has_bits & 0x00000200u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pc().data(), this->pc().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.pc");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->pc(), target);
  }

  // optional string po = 12;
  if (cached_has_bits & 0x00000400u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->po().data(), this->po().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.po");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        12, this->po(), target);
  }

  // optional string country = 13;
  if (cached_has_bits & 0x00000800u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->country().data(), this->country().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pa.country");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        13, this->country(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:in.gov.uidai.authserver.protobuf.Pa)
  return target;
}

size_t Pa::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:in.gov.uidai.authserver.protobuf.Pa)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 255u) {
    // optional string co = 2;
    if (has_co()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->co());
    }

    // optional string house = 3;
    if (has_house()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->house());
    }

    // optional string street = 4;
    if (has_street()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->street());
    }

    // optional string lm = 5;
    if (has_lm()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lm());
    }

    // optional string loc = 6;
    if (has_loc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->loc());
    }

    // optional string vtc = 7;
    if (has_vtc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->vtc());
    }

    // optional string subdist = 8;
    if (has_subdist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->subdist());
    }

    // optional string dist = 9;
    if (has_dist()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dist());
    }

  }
  if (_has_bits_[8 / 32] & 7936u) {
    // optional string state = 10;
    if (has_state()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->state());
    }

    // optional string pc = 11;
    if (has_pc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pc());
    }

    // optional string po = 12;
    if (has_po()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->po());
    }

    // optional string country = 13;
    if (has_country()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->country());
    }

    // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
    if (has_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ms());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pa::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:in.gov.uidai.authserver.protobuf.Pa)
  GOOGLE_DCHECK_NE(&from, this);
  const Pa* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pa>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:in.gov.uidai.authserver.protobuf.Pa)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:in.gov.uidai.authserver.protobuf.Pa)
    MergeFrom(*source);
  }
}

void Pa::MergeFrom(const Pa& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:in.gov.uidai.authserver.protobuf.Pa)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 255u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_co();
      co_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.co_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_house();
      house_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.house_);
    }
    if (cached_has_bits & 0x00000004u) {
      set_has_street();
      street_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.street_);
    }
    if (cached_has_bits & 0x00000008u) {
      set_has_lm();
      lm_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lm_);
    }
    if (cached_has_bits & 0x00000010u) {
      set_has_loc();
      loc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.loc_);
    }
    if (cached_has_bits & 0x00000020u) {
      set_has_vtc();
      vtc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vtc_);
    }
    if (cached_has_bits & 0x00000040u) {
      set_has_subdist();
      subdist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.subdist_);
    }
    if (cached_has_bits & 0x00000080u) {
      set_has_dist();
      dist_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dist_);
    }
  }
  if (cached_has_bits & 7936u) {
    if (cached_has_bits & 0x00000100u) {
      set_has_state();
      state_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_);
    }
    if (cached_has_bits & 0x00000200u) {
      set_has_pc();
      pc_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pc_);
    }
    if (cached_has_bits & 0x00000400u) {
      set_has_po();
      po_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.po_);
    }
    if (cached_has_bits & 0x00000800u) {
      set_has_country();
      country_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.country_);
    }
    if (cached_has_bits & 0x00001000u) {
      ms_ = from.ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Pa::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:in.gov.uidai.authserver.protobuf.Pa)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pa::CopyFrom(const Pa& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:in.gov.uidai.authserver.protobuf.Pa)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pa::IsInitialized() const {
  return true;
}

void Pa::Swap(Pa* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pa::InternalSwap(Pa* other) {
  co_.Swap(&other->co_);
  house_.Swap(&other->house_);
  street_.Swap(&other->street_);
  lm_.Swap(&other->lm_);
  loc_.Swap(&other->loc_);
  vtc_.Swap(&other->vtc_);
  subdist_.Swap(&other->subdist_);
  dist_.Swap(&other->dist_);
  state_.Swap(&other->state_);
  pc_.Swap(&other->pc_);
  po_.Swap(&other->po_);
  country_.Swap(&other->country_);
  std::swap(ms_, other->ms_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pa::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pa

// optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
bool Pa::has_ms() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
void Pa::set_has_ms() {
  _has_bits_[0] |= 0x00001000u;
}
void Pa::clear_has_ms() {
  _has_bits_[0] &= ~0x00001000u;
}
void Pa::clear_ms() {
  ms_ = 1;
  clear_has_ms();
}
::in::gov::uidai::authserver::protobuf::Ms Pa::ms() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.ms)
  return static_cast< ::in::gov::uidai::authserver::protobuf::Ms >(ms_);
}
void Pa::set_ms(::in::gov::uidai::authserver::protobuf::Ms value) {
  assert(::in::gov::uidai::authserver::protobuf::Ms_IsValid(value));
  set_has_ms();
  ms_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.ms)
}

// optional string co = 2;
bool Pa::has_co() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Pa::set_has_co() {
  _has_bits_[0] |= 0x00000001u;
}
void Pa::clear_has_co() {
  _has_bits_[0] &= ~0x00000001u;
}
void Pa::clear_co() {
  co_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_co();
}
const ::std::string& Pa::co() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.co)
  return co_.GetNoArena();
}
void Pa::set_co(const ::std::string& value) {
  set_has_co();
  co_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.co)
}
#if LANG_CXX11
void Pa::set_co(::std::string&& value) {
  set_has_co();
  co_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.co)
}
#endif
void Pa::set_co(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_co();
  co_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.co)
}
void Pa::set_co(const char* value, size_t size) {
  set_has_co();
  co_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.co)
}
::std::string* Pa::mutable_co() {
  set_has_co();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.co)
  return co_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_co() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.co)
  clear_has_co();
  return co_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_co(::std::string* co) {
  if (co != NULL) {
    set_has_co();
  } else {
    clear_has_co();
  }
  co_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), co);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.co)
}

// optional string house = 3;
bool Pa::has_house() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Pa::set_has_house() {
  _has_bits_[0] |= 0x00000002u;
}
void Pa::clear_has_house() {
  _has_bits_[0] &= ~0x00000002u;
}
void Pa::clear_house() {
  house_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_house();
}
const ::std::string& Pa::house() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.house)
  return house_.GetNoArena();
}
void Pa::set_house(const ::std::string& value) {
  set_has_house();
  house_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.house)
}
#if LANG_CXX11
void Pa::set_house(::std::string&& value) {
  set_has_house();
  house_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.house)
}
#endif
void Pa::set_house(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_house();
  house_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.house)
}
void Pa::set_house(const char* value, size_t size) {
  set_has_house();
  house_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.house)
}
::std::string* Pa::mutable_house() {
  set_has_house();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.house)
  return house_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_house() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.house)
  clear_has_house();
  return house_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_house(::std::string* house) {
  if (house != NULL) {
    set_has_house();
  } else {
    clear_has_house();
  }
  house_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), house);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.house)
}

// optional string street = 4;
bool Pa::has_street() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Pa::set_has_street() {
  _has_bits_[0] |= 0x00000004u;
}
void Pa::clear_has_street() {
  _has_bits_[0] &= ~0x00000004u;
}
void Pa::clear_street() {
  street_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_street();
}
const ::std::string& Pa::street() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.street)
  return street_.GetNoArena();
}
void Pa::set_street(const ::std::string& value) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.street)
}
#if LANG_CXX11
void Pa::set_street(::std::string&& value) {
  set_has_street();
  street_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.street)
}
#endif
void Pa::set_street(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.street)
}
void Pa::set_street(const char* value, size_t size) {
  set_has_street();
  street_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.street)
}
::std::string* Pa::mutable_street() {
  set_has_street();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.street)
  return street_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_street() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.street)
  clear_has_street();
  return street_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_street(::std::string* street) {
  if (street != NULL) {
    set_has_street();
  } else {
    clear_has_street();
  }
  street_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), street);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.street)
}

// optional string lm = 5;
bool Pa::has_lm() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Pa::set_has_lm() {
  _has_bits_[0] |= 0x00000008u;
}
void Pa::clear_has_lm() {
  _has_bits_[0] &= ~0x00000008u;
}
void Pa::clear_lm() {
  lm_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lm();
}
const ::std::string& Pa::lm() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.lm)
  return lm_.GetNoArena();
}
void Pa::set_lm(const ::std::string& value) {
  set_has_lm();
  lm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.lm)
}
#if LANG_CXX11
void Pa::set_lm(::std::string&& value) {
  set_has_lm();
  lm_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.lm)
}
#endif
void Pa::set_lm(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lm();
  lm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.lm)
}
void Pa::set_lm(const char* value, size_t size) {
  set_has_lm();
  lm_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.lm)
}
::std::string* Pa::mutable_lm() {
  set_has_lm();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.lm)
  return lm_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_lm() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.lm)
  clear_has_lm();
  return lm_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_lm(::std::string* lm) {
  if (lm != NULL) {
    set_has_lm();
  } else {
    clear_has_lm();
  }
  lm_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lm);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.lm)
}

// optional string loc = 6;
bool Pa::has_loc() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Pa::set_has_loc() {
  _has_bits_[0] |= 0x00000010u;
}
void Pa::clear_has_loc() {
  _has_bits_[0] &= ~0x00000010u;
}
void Pa::clear_loc() {
  loc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_loc();
}
const ::std::string& Pa::loc() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.loc)
  return loc_.GetNoArena();
}
void Pa::set_loc(const ::std::string& value) {
  set_has_loc();
  loc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.loc)
}
#if LANG_CXX11
void Pa::set_loc(::std::string&& value) {
  set_has_loc();
  loc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.loc)
}
#endif
void Pa::set_loc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_loc();
  loc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.loc)
}
void Pa::set_loc(const char* value, size_t size) {
  set_has_loc();
  loc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.loc)
}
::std::string* Pa::mutable_loc() {
  set_has_loc();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.loc)
  return loc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_loc() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.loc)
  clear_has_loc();
  return loc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_loc(::std::string* loc) {
  if (loc != NULL) {
    set_has_loc();
  } else {
    clear_has_loc();
  }
  loc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), loc);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.loc)
}

// optional string vtc = 7;
bool Pa::has_vtc() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Pa::set_has_vtc() {
  _has_bits_[0] |= 0x00000020u;
}
void Pa::clear_has_vtc() {
  _has_bits_[0] &= ~0x00000020u;
}
void Pa::clear_vtc() {
  vtc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_vtc();
}
const ::std::string& Pa::vtc() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.vtc)
  return vtc_.GetNoArena();
}
void Pa::set_vtc(const ::std::string& value) {
  set_has_vtc();
  vtc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.vtc)
}
#if LANG_CXX11
void Pa::set_vtc(::std::string&& value) {
  set_has_vtc();
  vtc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.vtc)
}
#endif
void Pa::set_vtc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_vtc();
  vtc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.vtc)
}
void Pa::set_vtc(const char* value, size_t size) {
  set_has_vtc();
  vtc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.vtc)
}
::std::string* Pa::mutable_vtc() {
  set_has_vtc();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.vtc)
  return vtc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_vtc() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.vtc)
  clear_has_vtc();
  return vtc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_vtc(::std::string* vtc) {
  if (vtc != NULL) {
    set_has_vtc();
  } else {
    clear_has_vtc();
  }
  vtc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), vtc);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.vtc)
}

// optional string subdist = 8;
bool Pa::has_subdist() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
void Pa::set_has_subdist() {
  _has_bits_[0] |= 0x00000040u;
}
void Pa::clear_has_subdist() {
  _has_bits_[0] &= ~0x00000040u;
}
void Pa::clear_subdist() {
  subdist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_subdist();
}
const ::std::string& Pa::subdist() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.subdist)
  return subdist_.GetNoArena();
}
void Pa::set_subdist(const ::std::string& value) {
  set_has_subdist();
  subdist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.subdist)
}
#if LANG_CXX11
void Pa::set_subdist(::std::string&& value) {
  set_has_subdist();
  subdist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.subdist)
}
#endif
void Pa::set_subdist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_subdist();
  subdist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.subdist)
}
void Pa::set_subdist(const char* value, size_t size) {
  set_has_subdist();
  subdist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.subdist)
}
::std::string* Pa::mutable_subdist() {
  set_has_subdist();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.subdist)
  return subdist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_subdist() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.subdist)
  clear_has_subdist();
  return subdist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_subdist(::std::string* subdist) {
  if (subdist != NULL) {
    set_has_subdist();
  } else {
    clear_has_subdist();
  }
  subdist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), subdist);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.subdist)
}

// optional string dist = 9;
bool Pa::has_dist() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
void Pa::set_has_dist() {
  _has_bits_[0] |= 0x00000080u;
}
void Pa::clear_has_dist() {
  _has_bits_[0] &= ~0x00000080u;
}
void Pa::clear_dist() {
  dist_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dist();
}
const ::std::string& Pa::dist() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.dist)
  return dist_.GetNoArena();
}
void Pa::set_dist(const ::std::string& value) {
  set_has_dist();
  dist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.dist)
}
#if LANG_CXX11
void Pa::set_dist(::std::string&& value) {
  set_has_dist();
  dist_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.dist)
}
#endif
void Pa::set_dist(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dist();
  dist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.dist)
}
void Pa::set_dist(const char* value, size_t size) {
  set_has_dist();
  dist_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.dist)
}
::std::string* Pa::mutable_dist() {
  set_has_dist();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.dist)
  return dist_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_dist() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.dist)
  clear_has_dist();
  return dist_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_dist(::std::string* dist) {
  if (dist != NULL) {
    set_has_dist();
  } else {
    clear_has_dist();
  }
  dist_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dist);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.dist)
}

// optional string state = 10;
bool Pa::has_state() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
void Pa::set_has_state() {
  _has_bits_[0] |= 0x00000100u;
}
void Pa::clear_has_state() {
  _has_bits_[0] &= ~0x00000100u;
}
void Pa::clear_state() {
  state_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_state();
}
const ::std::string& Pa::state() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.state)
  return state_.GetNoArena();
}
void Pa::set_state(const ::std::string& value) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.state)
}
#if LANG_CXX11
void Pa::set_state(::std::string&& value) {
  set_has_state();
  state_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.state)
}
#endif
void Pa::set_state(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.state)
}
void Pa::set_state(const char* value, size_t size) {
  set_has_state();
  state_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.state)
}
::std::string* Pa::mutable_state() {
  set_has_state();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.state)
  return state_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_state() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.state)
  clear_has_state();
  return state_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_state(::std::string* state) {
  if (state != NULL) {
    set_has_state();
  } else {
    clear_has_state();
  }
  state_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), state);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.state)
}

// optional string pc = 11;
bool Pa::has_pc() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
void Pa::set_has_pc() {
  _has_bits_[0] |= 0x00000200u;
}
void Pa::clear_has_pc() {
  _has_bits_[0] &= ~0x00000200u;
}
void Pa::clear_pc() {
  pc_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pc();
}
const ::std::string& Pa::pc() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.pc)
  return pc_.GetNoArena();
}
void Pa::set_pc(const ::std::string& value) {
  set_has_pc();
  pc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.pc)
}
#if LANG_CXX11
void Pa::set_pc(::std::string&& value) {
  set_has_pc();
  pc_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.pc)
}
#endif
void Pa::set_pc(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pc();
  pc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.pc)
}
void Pa::set_pc(const char* value, size_t size) {
  set_has_pc();
  pc_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.pc)
}
::std::string* Pa::mutable_pc() {
  set_has_pc();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.pc)
  return pc_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_pc() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.pc)
  clear_has_pc();
  return pc_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_pc(::std::string* pc) {
  if (pc != NULL) {
    set_has_pc();
  } else {
    clear_has_pc();
  }
  pc_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pc);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.pc)
}

// optional string po = 12;
bool Pa::has_po() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
void Pa::set_has_po() {
  _has_bits_[0] |= 0x00000400u;
}
void Pa::clear_has_po() {
  _has_bits_[0] &= ~0x00000400u;
}
void Pa::clear_po() {
  po_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_po();
}
const ::std::string& Pa::po() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.po)
  return po_.GetNoArena();
}
void Pa::set_po(const ::std::string& value) {
  set_has_po();
  po_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.po)
}
#if LANG_CXX11
void Pa::set_po(::std::string&& value) {
  set_has_po();
  po_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.po)
}
#endif
void Pa::set_po(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_po();
  po_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.po)
}
void Pa::set_po(const char* value, size_t size) {
  set_has_po();
  po_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.po)
}
::std::string* Pa::mutable_po() {
  set_has_po();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.po)
  return po_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_po() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.po)
  clear_has_po();
  return po_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_po(::std::string* po) {
  if (po != NULL) {
    set_has_po();
  } else {
    clear_has_po();
  }
  po_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), po);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.po)
}

// optional string country = 13;
bool Pa::has_country() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
void Pa::set_has_country() {
  _has_bits_[0] |= 0x00000800u;
}
void Pa::clear_has_country() {
  _has_bits_[0] &= ~0x00000800u;
}
void Pa::clear_country() {
  country_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_country();
}
const ::std::string& Pa::country() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pa.country)
  return country_.GetNoArena();
}
void Pa::set_country(const ::std::string& value) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pa.country)
}
#if LANG_CXX11
void Pa::set_country(::std::string&& value) {
  set_has_country();
  country_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pa.country)
}
#endif
void Pa::set_country(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pa.country)
}
void Pa::set_country(const char* value, size_t size) {
  set_has_country();
  country_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pa.country)
}
::std::string* Pa::mutable_country() {
  set_has_country();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pa.country)
  return country_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pa::release_country() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pa.country)
  clear_has_country();
  return country_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pa::set_allocated_country(::std::string* country) {
  if (country != NULL) {
    set_has_country();
  } else {
    clear_has_country();
  }
  country_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), country);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pa.country)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pfa::kMsFieldNumber;
const int Pfa::kAvFieldNumber;
const int Pfa::kMvFieldNumber;
const int Pfa::kLavFieldNumber;
const int Pfa::kLmvFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pfa::Pfa()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_auth_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:in.gov.uidai.authserver.protobuf.Pfa)
}
Pfa::Pfa(const Pfa& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  av_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_av()) {
    av_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.av_);
  }
  lav_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_lav()) {
    lav_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lav_);
  }
  ::memcpy(&mv_, &from.mv_,
    reinterpret_cast<char*>(&ms_) -
    reinterpret_cast<char*>(&mv_) + sizeof(ms_));
  // @@protoc_insertion_point(copy_constructor:in.gov.uidai.authserver.protobuf.Pfa)
}

void Pfa::SharedCtor() {
  _cached_size_ = 0;
  av_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lav_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&mv_, 0, reinterpret_cast<char*>(&lmv_) -
    reinterpret_cast<char*>(&mv_) + sizeof(lmv_));
  ms_ = 1;
}

Pfa::~Pfa() {
  // @@protoc_insertion_point(destructor:in.gov.uidai.authserver.protobuf.Pfa)
  SharedDtor();
}

void Pfa::SharedDtor() {
  av_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  lav_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Pfa::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pfa::descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pfa& Pfa::default_instance() {
  protobuf_auth_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pfa* Pfa::New(::google::protobuf::Arena* arena) const {
  Pfa* n = new Pfa;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pfa::Clear() {
// @@protoc_insertion_point(message_clear_start:in.gov.uidai.authserver.protobuf.Pfa)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_av()) {
      GOOGLE_DCHECK(!av_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*av_.UnsafeRawStringPointer())->clear();
    }
    if (has_lav()) {
      GOOGLE_DCHECK(!lav_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*lav_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 28u) {
    ::memset(&mv_, 0, reinterpret_cast<char*>(&lmv_) -
      reinterpret_cast<char*>(&mv_) + sizeof(lmv_));
    ms_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pfa::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:in.gov.uidai.authserver.protobuf.Pfa)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::in::gov::uidai::authserver::protobuf::Ms_IsValid(value)) {
            set_ms(static_cast< ::in::gov::uidai::authserver::protobuf::Ms >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string av = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_av()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->av().data(), this->av().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pfa.av");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 mv = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_mv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &mv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string lav = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_lav()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->lav().data(), this->lav().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pfa.lav");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 lmv = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u)) {
          set_has_lmv();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &lmv_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:in.gov.uidai.authserver.protobuf.Pfa)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:in.gov.uidai.authserver.protobuf.Pfa)
  return false;
#undef DO_
}

void Pfa::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:in.gov.uidai.authserver.protobuf.Pfa)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
  if (cached_has_bits & 0x00000010u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->ms(), output);
  }

  // optional string av = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->av().data(), this->av().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pfa.av");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->av(), output);
  }

  // optional int32 mv = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->mv(), output);
  }

  // optional string lav = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lav().data(), this->lav().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pfa.lav");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->lav(), output);
  }

  // optional int32 lmv = 5;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->lmv(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:in.gov.uidai.authserver.protobuf.Pfa)
}

::google::protobuf::uint8* Pfa::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:in.gov.uidai.authserver.protobuf.Pfa)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
  if (cached_has_bits & 0x00000010u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->ms(), target);
  }

  // optional string av = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->av().data(), this->av().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pfa.av");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->av(), target);
  }

  // optional int32 mv = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->mv(), target);
  }

  // optional string lav = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->lav().data(), this->lav().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pfa.lav");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->lav(), target);
  }

  // optional int32 lmv = 5;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->lmv(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:in.gov.uidai.authserver.protobuf.Pfa)
  return target;
}

size_t Pfa::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:in.gov.uidai.authserver.protobuf.Pfa)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 31u) {
    // optional string av = 2;
    if (has_av()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->av());
    }

    // optional string lav = 4;
    if (has_lav()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->lav());
    }

    // optional int32 mv = 3;
    if (has_mv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->mv());
    }

    // optional int32 lmv = 5;
    if (has_lmv()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->lmv());
    }

    // optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
    if (has_ms()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->ms());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pfa::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:in.gov.uidai.authserver.protobuf.Pfa)
  GOOGLE_DCHECK_NE(&from, this);
  const Pfa* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pfa>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:in.gov.uidai.authserver.protobuf.Pfa)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:in.gov.uidai.authserver.protobuf.Pfa)
    MergeFrom(*source);
  }
}

void Pfa::MergeFrom(const Pfa& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:in.gov.uidai.authserver.protobuf.Pfa)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 31u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_av();
      av_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.av_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_lav();
      lav_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.lav_);
    }
    if (cached_has_bits & 0x00000004u) {
      mv_ = from.mv_;
    }
    if (cached_has_bits & 0x00000008u) {
      lmv_ = from.lmv_;
    }
    if (cached_has_bits & 0x00000010u) {
      ms_ = from.ms_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Pfa::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:in.gov.uidai.authserver.protobuf.Pfa)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pfa::CopyFrom(const Pfa& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:in.gov.uidai.authserver.protobuf.Pfa)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pfa::IsInitialized() const {
  return true;
}

void Pfa::Swap(Pfa* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pfa::InternalSwap(Pfa* other) {
  av_.Swap(&other->av_);
  lav_.Swap(&other->lav_);
  std::swap(mv_, other->mv_);
  std::swap(lmv_, other->lmv_);
  std::swap(ms_, other->ms_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pfa::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pfa

// optional .in.gov.uidai.authserver.protobuf.Ms ms = 1;
bool Pfa::has_ms() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Pfa::set_has_ms() {
  _has_bits_[0] |= 0x00000010u;
}
void Pfa::clear_has_ms() {
  _has_bits_[0] &= ~0x00000010u;
}
void Pfa::clear_ms() {
  ms_ = 1;
  clear_has_ms();
}
::in::gov::uidai::authserver::protobuf::Ms Pfa::ms() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pfa.ms)
  return static_cast< ::in::gov::uidai::authserver::protobuf::Ms >(ms_);
}
void Pfa::set_ms(::in::gov::uidai::authserver::protobuf::Ms value) {
  assert(::in::gov::uidai::authserver::protobuf::Ms_IsValid(value));
  set_has_ms();
  ms_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pfa.ms)
}

// optional string av = 2;
bool Pfa::has_av() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Pfa::set_has_av() {
  _has_bits_[0] |= 0x00000001u;
}
void Pfa::clear_has_av() {
  _has_bits_[0] &= ~0x00000001u;
}
void Pfa::clear_av() {
  av_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_av();
}
const ::std::string& Pfa::av() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pfa.av)
  return av_.GetNoArena();
}
void Pfa::set_av(const ::std::string& value) {
  set_has_av();
  av_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pfa.av)
}
#if LANG_CXX11
void Pfa::set_av(::std::string&& value) {
  set_has_av();
  av_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pfa.av)
}
#endif
void Pfa::set_av(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_av();
  av_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pfa.av)
}
void Pfa::set_av(const char* value, size_t size) {
  set_has_av();
  av_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pfa.av)
}
::std::string* Pfa::mutable_av() {
  set_has_av();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pfa.av)
  return av_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pfa::release_av() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pfa.av)
  clear_has_av();
  return av_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pfa::set_allocated_av(::std::string* av) {
  if (av != NULL) {
    set_has_av();
  } else {
    clear_has_av();
  }
  av_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), av);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pfa.av)
}

// optional int32 mv = 3;
bool Pfa::has_mv() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Pfa::set_has_mv() {
  _has_bits_[0] |= 0x00000004u;
}
void Pfa::clear_has_mv() {
  _has_bits_[0] &= ~0x00000004u;
}
void Pfa::clear_mv() {
  mv_ = 0;
  clear_has_mv();
}
::google::protobuf::int32 Pfa::mv() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pfa.mv)
  return mv_;
}
void Pfa::set_mv(::google::protobuf::int32 value) {
  set_has_mv();
  mv_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pfa.mv)
}

// optional string lav = 4;
bool Pfa::has_lav() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Pfa::set_has_lav() {
  _has_bits_[0] |= 0x00000002u;
}
void Pfa::clear_has_lav() {
  _has_bits_[0] &= ~0x00000002u;
}
void Pfa::clear_lav() {
  lav_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_lav();
}
const ::std::string& Pfa::lav() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pfa.lav)
  return lav_.GetNoArena();
}
void Pfa::set_lav(const ::std::string& value) {
  set_has_lav();
  lav_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pfa.lav)
}
#if LANG_CXX11
void Pfa::set_lav(::std::string&& value) {
  set_has_lav();
  lav_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pfa.lav)
}
#endif
void Pfa::set_lav(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_lav();
  lav_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pfa.lav)
}
void Pfa::set_lav(const char* value, size_t size) {
  set_has_lav();
  lav_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pfa.lav)
}
::std::string* Pfa::mutable_lav() {
  set_has_lav();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pfa.lav)
  return lav_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pfa::release_lav() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pfa.lav)
  clear_has_lav();
  return lav_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pfa::set_allocated_lav(::std::string* lav) {
  if (lav != NULL) {
    set_has_lav();
  } else {
    clear_has_lav();
  }
  lav_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), lav);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pfa.lav)
}

// optional int32 lmv = 5;
bool Pfa::has_lmv() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Pfa::set_has_lmv() {
  _has_bits_[0] |= 0x00000008u;
}
void Pfa::clear_has_lmv() {
  _has_bits_[0] &= ~0x00000008u;
}
void Pfa::clear_lmv() {
  lmv_ = 0;
  clear_has_lmv();
}
::google::protobuf::int32 Pfa::lmv() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pfa.lmv)
  return lmv_;
}
void Pfa::set_lmv(::google::protobuf::int32 value) {
  set_has_lmv();
  lmv_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pfa.lmv)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Dob::kYearFieldNumber;
const int Dob::kMonthFieldNumber;
const int Dob::kDayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Dob::Dob()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_auth_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:in.gov.uidai.authserver.protobuf.Dob)
}
Dob::Dob(const Dob& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&year_, &from.year_,
    reinterpret_cast<char*>(&day_) -
    reinterpret_cast<char*>(&year_) + sizeof(day_));
  // @@protoc_insertion_point(copy_constructor:in.gov.uidai.authserver.protobuf.Dob)
}

void Dob::SharedCtor() {
  _cached_size_ = 0;
  ::memset(&year_, 0, reinterpret_cast<char*>(&day_) -
    reinterpret_cast<char*>(&year_) + sizeof(day_));
}

Dob::~Dob() {
  // @@protoc_insertion_point(destructor:in.gov.uidai.authserver.protobuf.Dob)
  SharedDtor();
}

void Dob::SharedDtor() {
}

void Dob::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Dob::descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Dob& Dob::default_instance() {
  protobuf_auth_2eproto::InitDefaults();
  return *internal_default_instance();
}

Dob* Dob::New(::google::protobuf::Arena* arena) const {
  Dob* n = new Dob;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Dob::Clear() {
// @@protoc_insertion_point(message_clear_start:in.gov.uidai.authserver.protobuf.Dob)
  if (_has_bits_[0 / 32] & 7u) {
    ::memset(&year_, 0, reinterpret_cast<char*>(&day_) -
      reinterpret_cast<char*>(&year_) + sizeof(day_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Dob::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:in.gov.uidai.authserver.protobuf.Dob)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 year = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          set_has_year();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &year_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 month = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_month();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &month_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional int32 day = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_day();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &day_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:in.gov.uidai.authserver.protobuf.Dob)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:in.gov.uidai.authserver.protobuf.Dob)
  return false;
#undef DO_
}

void Dob::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:in.gov.uidai.authserver.protobuf.Dob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 year = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->year(), output);
  }

  // optional int32 month = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->month(), output);
  }

  // optional int32 day = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->day(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:in.gov.uidai.authserver.protobuf.Dob)
}

::google::protobuf::uint8* Dob::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:in.gov.uidai.authserver.protobuf.Dob)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required int32 year = 1;
  if (cached_has_bits & 0x00000001u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->year(), target);
  }

  // optional int32 month = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->month(), target);
  }

  // optional int32 day = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->day(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:in.gov.uidai.authserver.protobuf.Dob)
  return target;
}

size_t Dob::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:in.gov.uidai.authserver.protobuf.Dob)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required int32 year = 1;
  if (has_year()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->year());
  }
  if (_has_bits_[0 / 32] & 6u) {
    // optional int32 month = 2;
    if (has_month()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->month());
    }

    // optional int32 day = 3;
    if (has_day()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->day());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Dob::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:in.gov.uidai.authserver.protobuf.Dob)
  GOOGLE_DCHECK_NE(&from, this);
  const Dob* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Dob>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:in.gov.uidai.authserver.protobuf.Dob)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:in.gov.uidai.authserver.protobuf.Dob)
    MergeFrom(*source);
  }
}

void Dob::MergeFrom(const Dob& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:in.gov.uidai.authserver.protobuf.Dob)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      year_ = from.year_;
    }
    if (cached_has_bits & 0x00000002u) {
      month_ = from.month_;
    }
    if (cached_has_bits & 0x00000004u) {
      day_ = from.day_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Dob::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:in.gov.uidai.authserver.protobuf.Dob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Dob::CopyFrom(const Dob& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:in.gov.uidai.authserver.protobuf.Dob)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Dob::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  return true;
}

void Dob::Swap(Dob* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Dob::InternalSwap(Dob* other) {
  std::swap(year_, other->year_);
  std::swap(month_, other->month_);
  std::swap(day_, other->day_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Dob::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Dob

// required int32 year = 1;
bool Dob::has_year() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Dob::set_has_year() {
  _has_bits_[0] |= 0x00000001u;
}
void Dob::clear_has_year() {
  _has_bits_[0] &= ~0x00000001u;
}
void Dob::clear_year() {
  year_ = 0;
  clear_has_year();
}
::google::protobuf::int32 Dob::year() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Dob.year)
  return year_;
}
void Dob::set_year(::google::protobuf::int32 value) {
  set_has_year();
  year_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Dob.year)
}

// optional int32 month = 2;
bool Dob::has_month() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Dob::set_has_month() {
  _has_bits_[0] |= 0x00000002u;
}
void Dob::clear_has_month() {
  _has_bits_[0] &= ~0x00000002u;
}
void Dob::clear_month() {
  month_ = 0;
  clear_has_month();
}
::google::protobuf::int32 Dob::month() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Dob.month)
  return month_;
}
void Dob::set_month(::google::protobuf::int32 value) {
  set_has_month();
  month_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Dob.month)
}

// optional int32 day = 3;
bool Dob::has_day() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Dob::set_has_day() {
  _has_bits_[0] |= 0x00000004u;
}
void Dob::clear_has_day() {
  _has_bits_[0] &= ~0x00000004u;
}
void Dob::clear_day() {
  day_ = 0;
  clear_has_day();
}
::google::protobuf::int32 Dob::day() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Dob.day)
  return day_;
}
void Dob::set_day(::google::protobuf::int32 value) {
  set_has_day();
  day_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Dob.day)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bios::kBioFieldNumber;
const int Bios::kDihFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bios::Bios()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_auth_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:in.gov.uidai.authserver.protobuf.Bios)
}
Bios::Bios(const Bios& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      bio_(from.bio_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dih_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_dih()) {
    dih_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dih_);
  }
  // @@protoc_insertion_point(copy_constructor:in.gov.uidai.authserver.protobuf.Bios)
}

void Bios::SharedCtor() {
  _cached_size_ = 0;
  dih_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Bios::~Bios() {
  // @@protoc_insertion_point(destructor:in.gov.uidai.authserver.protobuf.Bios)
  SharedDtor();
}

void Bios::SharedDtor() {
  dih_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Bios::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bios::descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bios& Bios::default_instance() {
  protobuf_auth_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bios* Bios::New(::google::protobuf::Arena* arena) const {
  Bios* n = new Bios;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bios::Clear() {
// @@protoc_insertion_point(message_clear_start:in.gov.uidai.authserver.protobuf.Bios)
  bio_.Clear();
  if (has_dih()) {
    GOOGLE_DCHECK(!dih_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*dih_.UnsafeRawStringPointer())->clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Bios::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:in.gov.uidai.authserver.protobuf.Bios)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .in.gov.uidai.authserver.protobuf.Bio bio = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_bio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string dih = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dih()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->dih().data(), this->dih().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Bios.dih");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:in.gov.uidai.authserver.protobuf.Bios)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:in.gov.uidai.authserver.protobuf.Bios)
  return false;
#undef DO_
}

void Bios::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:in.gov.uidai.authserver.protobuf.Bios)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .in.gov.uidai.authserver.protobuf.Bio bio = 1;
  for (unsigned int i = 0, n = this->bio_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bio(i), output);
  }

  cached_has_bits = _has_bits_[0];
  // required string dih = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dih().data(), this->dih().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Bios.dih");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->dih(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:in.gov.uidai.authserver.protobuf.Bios)
}

::google::protobuf::uint8* Bios::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:in.gov.uidai.authserver.protobuf.Bios)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .in.gov.uidai.authserver.protobuf.Bio bio = 1;
  for (unsigned int i = 0, n = this->bio_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->bio(i), deterministic, target);
  }

  cached_has_bits = _has_bits_[0];
  // required string dih = 2;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->dih().data(), this->dih().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Bios.dih");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dih(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:in.gov.uidai.authserver.protobuf.Bios)
  return target;
}

size_t Bios::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:in.gov.uidai.authserver.protobuf.Bios)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // required string dih = 2;
  if (has_dih()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->dih());
  }
  // repeated .in.gov.uidai.authserver.protobuf.Bio bio = 1;
  {
    unsigned int count = this->bio_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bio(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bios::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:in.gov.uidai.authserver.protobuf.Bios)
  GOOGLE_DCHECK_NE(&from, this);
  const Bios* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bios>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:in.gov.uidai.authserver.protobuf.Bios)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:in.gov.uidai.authserver.protobuf.Bios)
    MergeFrom(*source);
  }
}

void Bios::MergeFrom(const Bios& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:in.gov.uidai.authserver.protobuf.Bios)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  bio_.MergeFrom(from.bio_);
  if (from.has_dih()) {
    set_has_dih();
    dih_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.dih_);
  }
}

void Bios::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:in.gov.uidai.authserver.protobuf.Bios)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bios::CopyFrom(const Bios& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:in.gov.uidai.authserver.protobuf.Bios)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bios::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->bio())) return false;
  return true;
}

void Bios::Swap(Bios* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bios::InternalSwap(Bios* other) {
  bio_.InternalSwap(&other->bio_);
  dih_.Swap(&other->dih_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bios::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bios

// repeated .in.gov.uidai.authserver.protobuf.Bio bio = 1;
int Bios::bio_size() const {
  return bio_.size();
}
void Bios::clear_bio() {
  bio_.Clear();
}
const ::in::gov::uidai::authserver::protobuf::Bio& Bios::bio(int index) const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Bios.bio)
  return bio_.Get(index);
}
::in::gov::uidai::authserver::protobuf::Bio* Bios::mutable_bio(int index) {
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Bios.bio)
  return bio_.Mutable(index);
}
::in::gov::uidai::authserver::protobuf::Bio* Bios::add_bio() {
  // @@protoc_insertion_point(field_add:in.gov.uidai.authserver.protobuf.Bios.bio)
  return bio_.Add();
}
::google::protobuf::RepeatedPtrField< ::in::gov::uidai::authserver::protobuf::Bio >*
Bios::mutable_bio() {
  // @@protoc_insertion_point(field_mutable_list:in.gov.uidai.authserver.protobuf.Bios.bio)
  return &bio_;
}
const ::google::protobuf::RepeatedPtrField< ::in::gov::uidai::authserver::protobuf::Bio >&
Bios::bio() const {
  // @@protoc_insertion_point(field_list:in.gov.uidai.authserver.protobuf.Bios.bio)
  return bio_;
}

// required string dih = 2;
bool Bios::has_dih() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Bios::set_has_dih() {
  _has_bits_[0] |= 0x00000001u;
}
void Bios::clear_has_dih() {
  _has_bits_[0] &= ~0x00000001u;
}
void Bios::clear_dih() {
  dih_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_dih();
}
const ::std::string& Bios::dih() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Bios.dih)
  return dih_.GetNoArena();
}
void Bios::set_dih(const ::std::string& value) {
  set_has_dih();
  dih_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Bios.dih)
}
#if LANG_CXX11
void Bios::set_dih(::std::string&& value) {
  set_has_dih();
  dih_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Bios.dih)
}
#endif
void Bios::set_dih(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_dih();
  dih_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Bios.dih)
}
void Bios::set_dih(const char* value, size_t size) {
  set_has_dih();
  dih_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Bios.dih)
}
::std::string* Bios::mutable_dih() {
  set_has_dih();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Bios.dih)
  return dih_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Bios::release_dih() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Bios.dih)
  clear_has_dih();
  return dih_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Bios::set_allocated_dih(::std::string* dih) {
  if (dih != NULL) {
    set_has_dih();
  } else {
    clear_has_dih();
  }
  dih_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dih);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Bios.dih)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Bio::kTypeFieldNumber;
const int Bio::kPoshFieldNumber;
const int Bio::kContentFieldNumber;
const int Bio::kBsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Bio::Bio()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_auth_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:in.gov.uidai.authserver.protobuf.Bio)
}
Bio::Bio(const Bio& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_content()) {
    content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
  }
  bs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_bs()) {
    bs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bs_);
  }
  ::memcpy(&type_, &from.type_,
    reinterpret_cast<char*>(&posh_) -
    reinterpret_cast<char*>(&type_) + sizeof(posh_));
  // @@protoc_insertion_point(copy_constructor:in.gov.uidai.authserver.protobuf.Bio)
}

void Bio::SharedCtor() {
  _cached_size_ = 0;
  content_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bs_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
  posh_ = 1;
}

Bio::~Bio() {
  // @@protoc_insertion_point(destructor:in.gov.uidai.authserver.protobuf.Bio)
  SharedDtor();
}

void Bio::SharedDtor() {
  content_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  bs_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Bio::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Bio::descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Bio& Bio::default_instance() {
  protobuf_auth_2eproto::InitDefaults();
  return *internal_default_instance();
}

Bio* Bio::New(::google::protobuf::Arena* arena) const {
  Bio* n = new Bio;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Bio::Clear() {
// @@protoc_insertion_point(message_clear_start:in.gov.uidai.authserver.protobuf.Bio)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_content()) {
      GOOGLE_DCHECK(!content_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*content_.UnsafeRawStringPointer())->clear();
    }
    if (has_bs()) {
      GOOGLE_DCHECK(!bs_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*bs_.UnsafeRawStringPointer())->clear();
    }
  }
  if (_has_bits_[0 / 32] & 12u) {
    type_ = 0;
    posh_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Bio::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:in.gov.uidai.authserver.protobuf.Bio)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .in.gov.uidai.authserver.protobuf.BioType type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::in::gov::uidai::authserver::protobuf::BioType_IsValid(value)) {
            set_type(static_cast< ::in::gov::uidai::authserver::protobuf::BioType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required .in.gov.uidai.authserver.protobuf.Position posh = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::in::gov::uidai::authserver::protobuf::Position_IsValid(value)) {
            set_posh(static_cast< ::in::gov::uidai::authserver::protobuf::Position >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required bytes content = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_content()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // required string bs = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_bs()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->bs().data(), this->bs().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Bio.bs");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:in.gov.uidai.authserver.protobuf.Bio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:in.gov.uidai.authserver.protobuf.Bio)
  return false;
#undef DO_
}

void Bio::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:in.gov.uidai.authserver.protobuf.Bio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .in.gov.uidai.authserver.protobuf.BioType type = 1;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // required .in.gov.uidai.authserver.protobuf.Position posh = 2;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->posh(), output);
  }

  // required bytes content = 3;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->content(), output);
  }

  // required string bs = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bs().data(), this->bs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Bio.bs");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      4, this->bs(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:in.gov.uidai.authserver.protobuf.Bio)
}

::google::protobuf::uint8* Bio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:in.gov.uidai.authserver.protobuf.Bio)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .in.gov.uidai.authserver.protobuf.BioType type = 1;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // required .in.gov.uidai.authserver.protobuf.Position posh = 2;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->posh(), target);
  }

  // required bytes content = 3;
  if (cached_has_bits & 0x00000001u) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->content(), target);
  }

  // required string bs = 4;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->bs().data(), this->bs().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Bio.bs");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        4, this->bs(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:in.gov.uidai.authserver.protobuf.Bio)
  return target;
}

size_t Bio::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:in.gov.uidai.authserver.protobuf.Bio)
  size_t total_size = 0;

  if (has_content()) {
    // required bytes content = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());
  }

  if (has_bs()) {
    // required string bs = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bs());
  }

  if (has_type()) {
    // required .in.gov.uidai.authserver.protobuf.BioType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
  }

  if (has_posh()) {
    // required .in.gov.uidai.authserver.protobuf.Position posh = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->posh());
  }

  return total_size;
}
size_t Bio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:in.gov.uidai.authserver.protobuf.Bio)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required bytes content = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->content());

    // required string bs = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->bs());

    // required .in.gov.uidai.authserver.protobuf.BioType type = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());

    // required .in.gov.uidai.authserver.protobuf.Position posh = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->posh());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Bio::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:in.gov.uidai.authserver.protobuf.Bio)
  GOOGLE_DCHECK_NE(&from, this);
  const Bio* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Bio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:in.gov.uidai.authserver.protobuf.Bio)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:in.gov.uidai.authserver.protobuf.Bio)
    MergeFrom(*source);
  }
}

void Bio::MergeFrom(const Bio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:in.gov.uidai.authserver.protobuf.Bio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_content();
      content_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.content_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_bs();
      bs_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.bs_);
    }
    if (cached_has_bits & 0x00000004u) {
      type_ = from.type_;
    }
    if (cached_has_bits & 0x00000008u) {
      posh_ = from.posh_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Bio::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:in.gov.uidai.authserver.protobuf.Bio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Bio::CopyFrom(const Bio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:in.gov.uidai.authserver.protobuf.Bio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Bio::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;
  return true;
}

void Bio::Swap(Bio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Bio::InternalSwap(Bio* other) {
  content_.Swap(&other->content_);
  bs_.Swap(&other->bs_);
  std::swap(type_, other->type_);
  std::swap(posh_, other->posh_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Bio::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Bio

// required .in.gov.uidai.authserver.protobuf.BioType type = 1;
bool Bio::has_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Bio::set_has_type() {
  _has_bits_[0] |= 0x00000004u;
}
void Bio::clear_has_type() {
  _has_bits_[0] &= ~0x00000004u;
}
void Bio::clear_type() {
  type_ = 0;
  clear_has_type();
}
::in::gov::uidai::authserver::protobuf::BioType Bio::type() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Bio.type)
  return static_cast< ::in::gov::uidai::authserver::protobuf::BioType >(type_);
}
void Bio::set_type(::in::gov::uidai::authserver::protobuf::BioType value) {
  assert(::in::gov::uidai::authserver::protobuf::BioType_IsValid(value));
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Bio.type)
}

// required .in.gov.uidai.authserver.protobuf.Position posh = 2;
bool Bio::has_posh() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Bio::set_has_posh() {
  _has_bits_[0] |= 0x00000008u;
}
void Bio::clear_has_posh() {
  _has_bits_[0] &= ~0x00000008u;
}
void Bio::clear_posh() {
  posh_ = 1;
  clear_has_posh();
}
::in::gov::uidai::authserver::protobuf::Position Bio::posh() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Bio.posh)
  return static_cast< ::in::gov::uidai::authserver::protobuf::Position >(posh_);
}
void Bio::set_posh(::in::gov::uidai::authserver::protobuf::Position value) {
  assert(::in::gov::uidai::authserver::protobuf::Position_IsValid(value));
  set_has_posh();
  posh_ = value;
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Bio.posh)
}

// required bytes content = 3;
bool Bio::has_content() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Bio::set_has_content() {
  _has_bits_[0] |= 0x00000001u;
}
void Bio::clear_has_content() {
  _has_bits_[0] &= ~0x00000001u;
}
void Bio::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_content();
}
const ::std::string& Bio::content() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Bio.content)
  return content_.GetNoArena();
}
void Bio::set_content(const ::std::string& value) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Bio.content)
}
#if LANG_CXX11
void Bio::set_content(::std::string&& value) {
  set_has_content();
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Bio.content)
}
#endif
void Bio::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Bio.content)
}
void Bio::set_content(const void* value, size_t size) {
  set_has_content();
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Bio.content)
}
::std::string* Bio::mutable_content() {
  set_has_content();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Bio.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Bio::release_content() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Bio.content)
  clear_has_content();
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Bio::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    set_has_content();
  } else {
    clear_has_content();
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Bio.content)
}

// required string bs = 4;
bool Bio::has_bs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Bio::set_has_bs() {
  _has_bits_[0] |= 0x00000002u;
}
void Bio::clear_has_bs() {
  _has_bits_[0] &= ~0x00000002u;
}
void Bio::clear_bs() {
  bs_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_bs();
}
const ::std::string& Bio::bs() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Bio.bs)
  return bs_.GetNoArena();
}
void Bio::set_bs(const ::std::string& value) {
  set_has_bs();
  bs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Bio.bs)
}
#if LANG_CXX11
void Bio::set_bs(::std::string&& value) {
  set_has_bs();
  bs_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Bio.bs)
}
#endif
void Bio::set_bs(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_bs();
  bs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Bio.bs)
}
void Bio::set_bs(const char* value, size_t size) {
  set_has_bs();
  bs_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Bio.bs)
}
::std::string* Bio::mutable_bs() {
  set_has_bs();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Bio.bs)
  return bs_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Bio::release_bs() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Bio.bs)
  clear_has_bs();
  return bs_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Bio::set_allocated_bs(::std::string* bs) {
  if (bs != NULL) {
    set_has_bs();
  } else {
    clear_has_bs();
  }
  bs_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bs);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Bio.bs)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Pv::kOtpFieldNumber;
const int Pv::kPinFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Pv::Pv()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_auth_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:in.gov.uidai.authserver.protobuf.Pv)
}
Pv::Pv(const Pv& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  otp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_otp()) {
    otp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_);
  }
  pin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_pin()) {
    pin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pin_);
  }
  // @@protoc_insertion_point(copy_constructor:in.gov.uidai.authserver.protobuf.Pv)
}

void Pv::SharedCtor() {
  _cached_size_ = 0;
  otp_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pin_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Pv::~Pv() {
  // @@protoc_insertion_point(destructor:in.gov.uidai.authserver.protobuf.Pv)
  SharedDtor();
}

void Pv::SharedDtor() {
  otp_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pin_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Pv::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Pv::descriptor() {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Pv& Pv::default_instance() {
  protobuf_auth_2eproto::InitDefaults();
  return *internal_default_instance();
}

Pv* Pv::New(::google::protobuf::Arena* arena) const {
  Pv* n = new Pv;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Pv::Clear() {
// @@protoc_insertion_point(message_clear_start:in.gov.uidai.authserver.protobuf.Pv)
  if (_has_bits_[0 / 32] & 3u) {
    if (has_otp()) {
      GOOGLE_DCHECK(!otp_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*otp_.UnsafeRawStringPointer())->clear();
    }
    if (has_pin()) {
      GOOGLE_DCHECK(!pin_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
      (*pin_.UnsafeRawStringPointer())->clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool Pv::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:in.gov.uidai.authserver.protobuf.Pv)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string otp = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_otp()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->otp().data(), this->otp().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pv.otp");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional string pin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_pin()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->pin().data(), this->pin().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "in.gov.uidai.authserver.protobuf.Pv.pin");
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:in.gov.uidai.authserver.protobuf.Pv)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:in.gov.uidai.authserver.protobuf.Pv)
  return false;
#undef DO_
}

void Pv::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:in.gov.uidai.authserver.protobuf.Pv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string otp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp().data(), this->otp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pv.otp");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->otp(), output);
  }

  // optional string pin = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pin().data(), this->pin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pv.pin");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->pin(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:in.gov.uidai.authserver.protobuf.Pv)
}

::google::protobuf::uint8* Pv::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:in.gov.uidai.authserver.protobuf.Pv)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string otp = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->otp().data(), this->otp().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pv.otp");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->otp(), target);
  }

  // optional string pin = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->pin().data(), this->pin().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "in.gov.uidai.authserver.protobuf.Pv.pin");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->pin(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:in.gov.uidai.authserver.protobuf.Pv)
  return target;
}

size_t Pv::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:in.gov.uidai.authserver.protobuf.Pv)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 3u) {
    // optional string otp = 1;
    if (has_otp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->otp());
    }

    // optional string pin = 2;
    if (has_pin()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->pin());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Pv::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:in.gov.uidai.authserver.protobuf.Pv)
  GOOGLE_DCHECK_NE(&from, this);
  const Pv* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Pv>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:in.gov.uidai.authserver.protobuf.Pv)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:in.gov.uidai.authserver.protobuf.Pv)
    MergeFrom(*source);
  }
}

void Pv::MergeFrom(const Pv& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:in.gov.uidai.authserver.protobuf.Pv)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_otp();
      otp_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.otp_);
    }
    if (cached_has_bits & 0x00000002u) {
      set_has_pin();
      pin_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.pin_);
    }
  }
}

void Pv::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:in.gov.uidai.authserver.protobuf.Pv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Pv::CopyFrom(const Pv& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:in.gov.uidai.authserver.protobuf.Pv)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Pv::IsInitialized() const {
  return true;
}

void Pv::Swap(Pv* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Pv::InternalSwap(Pv* other) {
  otp_.Swap(&other->otp_);
  pin_.Swap(&other->pin_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Pv::GetMetadata() const {
  protobuf_auth_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_auth_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Pv

// optional string otp = 1;
bool Pv::has_otp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Pv::set_has_otp() {
  _has_bits_[0] |= 0x00000001u;
}
void Pv::clear_has_otp() {
  _has_bits_[0] &= ~0x00000001u;
}
void Pv::clear_otp() {
  otp_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_otp();
}
const ::std::string& Pv::otp() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pv.otp)
  return otp_.GetNoArena();
}
void Pv::set_otp(const ::std::string& value) {
  set_has_otp();
  otp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pv.otp)
}
#if LANG_CXX11
void Pv::set_otp(::std::string&& value) {
  set_has_otp();
  otp_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pv.otp)
}
#endif
void Pv::set_otp(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_otp();
  otp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pv.otp)
}
void Pv::set_otp(const char* value, size_t size) {
  set_has_otp();
  otp_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pv.otp)
}
::std::string* Pv::mutable_otp() {
  set_has_otp();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pv.otp)
  return otp_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pv::release_otp() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pv.otp)
  clear_has_otp();
  return otp_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pv::set_allocated_otp(::std::string* otp) {
  if (otp != NULL) {
    set_has_otp();
  } else {
    clear_has_otp();
  }
  otp_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), otp);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pv.otp)
}

// optional string pin = 2;
bool Pv::has_pin() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Pv::set_has_pin() {
  _has_bits_[0] |= 0x00000002u;
}
void Pv::clear_has_pin() {
  _has_bits_[0] &= ~0x00000002u;
}
void Pv::clear_pin() {
  pin_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_pin();
}
const ::std::string& Pv::pin() const {
  // @@protoc_insertion_point(field_get:in.gov.uidai.authserver.protobuf.Pv.pin)
  return pin_.GetNoArena();
}
void Pv::set_pin(const ::std::string& value) {
  set_has_pin();
  pin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:in.gov.uidai.authserver.protobuf.Pv.pin)
}
#if LANG_CXX11
void Pv::set_pin(::std::string&& value) {
  set_has_pin();
  pin_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:in.gov.uidai.authserver.protobuf.Pv.pin)
}
#endif
void Pv::set_pin(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_pin();
  pin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:in.gov.uidai.authserver.protobuf.Pv.pin)
}
void Pv::set_pin(const char* value, size_t size) {
  set_has_pin();
  pin_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:in.gov.uidai.authserver.protobuf.Pv.pin)
}
::std::string* Pv::mutable_pin() {
  set_has_pin();
  // @@protoc_insertion_point(field_mutable:in.gov.uidai.authserver.protobuf.Pv.pin)
  return pin_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Pv::release_pin() {
  // @@protoc_insertion_point(field_release:in.gov.uidai.authserver.protobuf.Pv.pin)
  clear_has_pin();
  return pin_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Pv::set_allocated_pin(::std::string* pin) {
  if (pin != NULL) {
    set_has_pin();
  } else {
    clear_has_pin();
  }
  pin_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), pin);
  // @@protoc_insertion_point(field_set_allocated:in.gov.uidai.authserver.protobuf.Pv.pin)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace protobuf
}  // namespace authserver
}  // namespace uidai
}  // namespace gov
}  // namespace in

// @@protoc_insertion_point(global_scope)
